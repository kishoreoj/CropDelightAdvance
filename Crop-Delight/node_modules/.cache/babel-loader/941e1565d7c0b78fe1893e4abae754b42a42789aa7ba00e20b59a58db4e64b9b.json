{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\Capst\\\\Crop-Delight\\\\src\\\\Components\\\\Register\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Register/RegisterPage.css';\nimport Navigation from '../Navigation/NavigationPage';\nimport Footer from '../Footer/FooterPage';\nimport farmerImage from '../assets/farmer.png';\nimport customerImage from '../assets/customer.png';\nimport workerImage from '../assets/worker.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [farmerName, setFarmerName] = useState('');\n  const [farmerId, setFarmerId] = useState('');\n  const [farmerLicense, setFarmerLicense] = useState(null);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addresses, setAddresses] = useState({\n    farmerAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    farmLocationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    shippingAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    communicationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    }\n  });\n  const [workerName, setWorkerName] = useState('');\n  const [skills, setSkills] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [error, setError] = useState('');\n  const [usernameExistsError, setUsernameExistsError] = useState('');\n  const [emailExistsError, setEmailExistsError] = useState('');\n  const [phoneExistsError, setPhoneExistsError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [sameAddress, setSameAddress] = useState(true);\n  const handleSelectUserType = selectedUserType => {\n    setUserType(selectedUserType);\n    setShowForm(true);\n    setSameAddress(true); // Set default to true for Farmer\n    clearErrors(); // Clear errors when selecting new userType\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    clearErrorByName(name); // Clear error for the specific field\n\n    // Phone number format validation and adjustment\n    if (name === 'phone') {\n      // Remove non-numeric characters from input\n      const phoneNumber = value.replace(/\\D/g, '');\n\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\n      if (phoneNumber.length === 10) {\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n        setPhone(formattedPhoneNumber);\n      } else {\n        setPhone(value); // If not 10 digits, set as entered\n      }\n    } else {\n      // For other fields, update state normally\n      switch (name) {\n        case 'username':\n          setUsername(value);\n          break;\n        case 'password':\n          setPassword(value);\n          break;\n        case 'confirmPassword':\n          setConfirmPassword(value);\n          break;\n        case 'farmerName':\n          setFarmerName(value);\n          break;\n        case 'farmerId':\n          setFarmerId(value);\n          break;\n        case 'email':\n          setEmail(value);\n          break;\n        case 'workerName':\n          setWorkerName(value);\n          break;\n        case 'skills':\n          setSkills(value);\n          break;\n        case 'customerName':\n          setCustomerName(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleAddressChange = (event, addressType) => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Validate and format the zip code as L9T 6A6\n    const formattedZipCode = formatZipCode(value);\n    setAddresses(prevAddresses => ({\n      ...prevAddresses,\n      [addressType]: {\n        ...prevAddresses[addressType],\n        [name]: formattedZipCode\n      }\n    }));\n  };\n  const formatZipCode = zipCode => {\n    // Remove non-alphanumeric characters\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\n\n    // Format the zip code as L9T 6A6 if it matches the pattern\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\n    if (zipRegex.test(cleanedZipCode)) {\n      // Insert space between the third and fourth characters\n      const formattedZipCode = `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`;\n      return formattedZipCode.toUpperCase(); // Ensure uppercase format\n    } else {\n      return zipCode; // Return as entered if not in the correct format\n    }\n  };\n  const handleFileChange = event => {\n    setFarmerLicense(event.target.files[0]);\n  };\n  const handleSameAddressChange = () => {\n    setSameAddress(prevSameAddress => !prevSameAddress);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Populate FormData based on user input\n    const formData = new FormData();\n    formData.append('userType', userType);\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    formData.append('addressStreet', addresses.farmerAddress.street);\n    formData.append('addressCity', addresses.farmerAddress.city);\n    formData.append('addressProvince', addresses.farmerAddress.province);\n    formData.append('addressZipCode', addresses.farmerAddress.zipCode);\n    formData.append('sameAddress', sameAddress); // Make sure sameAddress is added\n\n    // Append additional fields based on userType\n    switch (userType) {\n      case 'Farmer':\n        formData.append('farmerName', farmerName);\n        formData.append('farmerId', farmerId);\n        formData.append('farmerLicense', farmerLicense);\n        if (!sameAddress) {\n          formData.append('farmLocationStreet', addresses.farmLocationAddress.street);\n          formData.append('farmLocationCity', addresses.farmLocationAddress.city);\n          formData.append('farmLocationProvince', addresses.farmLocationAddress.province);\n          formData.append('farmLocationZipCode', addresses.farmLocationAddress.zipCode);\n        }\n        break;\n      case 'Worker':\n        formData.append('workerName', workerName);\n        formData.append('skills', skills);\n        formData.append('communicationStreet', addresses.communicationAddress.street);\n        formData.append('communicationCity', addresses.communicationAddress.city);\n        formData.append('communicationProvince', addresses.communicationAddress.province);\n        formData.append('communicationZipCode', addresses.communicationAddress.zipCode);\n        break;\n      case 'Customer':\n        formData.append('customerName', customerName);\n        formData.append('shippingStreet', addresses.shippingAddress.street);\n        formData.append('shippingCity', addresses.shippingAddress.city);\n        formData.append('shippingProvince', addresses.shippingAddress.province);\n        formData.append('shippingZipCode', addresses.shippingAddress.zipCode);\n        break;\n      default:\n        break;\n    }\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Registration successful:', data);\n        setError('Registration successful');\n        alert('Registration successful');\n        navigate('/login'); // Redirect to login page\n      } else {\n        // Handle server-side validation errors\n        if (data.message.includes('Username already exists')) {\n          setUsernameExistsError('Username already exists. Please choose a different one.');\n        } else if (data.message.includes('Email already exists')) {\n          setEmailExistsError('Email already exists. Please use a different email.');\n        } else if (data.message.includes('Phone Number already exists')) {\n          setPhoneExistsError('Phone Number already exists. Please use a different phone number.');\n        } else {\n          setError(data.message);\n        }\n      }\n    } catch (error) {\n      setError('Failed to register. Please try again later.');\n    }\n  };\n  const goBackToUserTypeSelection = () => {\n    setShowForm(false);\n    setUserType('');\n    clearErrors(); // Clear errors when going back\n  };\n  const clearErrorByName = name => {\n    switch (name) {\n      case 'username':\n        setUsernameExistsError('');\n        break;\n      case 'email':\n        setEmailExistsError('');\n        break;\n      case 'phone':\n        setPhoneExistsError('');\n        break;\n      default:\n        break;\n    }\n  };\n  const clearErrors = () => {\n    setError('');\n    setUsernameExistsError('');\n    setEmailExistsError('');\n    setPhoneExistsError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-form\",\n      children: !showForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usertype-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select User Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"usertype-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usertype-option\",\n            onClick: () => handleSelectUserType('Farmer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: farmerImage,\n              alt: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usertype-option\",\n            onClick: () => handleSelectUserType('Customer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: customerImage,\n              alt: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"usertype-option\",\n            onClick: () => handleSelectUserType('Worker'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: workerImage,\n              alt: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Register as \", userType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), usernameExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: usernameExistsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), emailExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: emailExistsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"phone\",\n            value: phone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), phoneExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: phoneExistsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 34\n        }, this), userType === 'Farmer' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"farmerName\",\n              value: farmerName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"farmerId\",\n              value: farmerId,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer License:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"farmerLicense\",\n              onChange: handleFileChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer Address Street:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"street\",\n              value: addresses.farmerAddress.street,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer Address City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              value: addresses.farmerAddress.city,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer Address Province:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"province\",\n              value: addresses.farmerAddress.province,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Farmer Address Zip Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"zipCode\",\n              value: addresses.farmerAddress.zipCode,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: sameAddress,\n              onChange: handleSameAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), \"Farm Location Address is the same as Farmer Address\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), !sameAddress && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Farm Location Address Street:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"street\",\n                value: addresses.farmLocationAddress.street,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Farm Location Address City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"city\",\n                value: addresses.farmLocationAddress.city,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Farm Location Address Province:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"province\",\n                value: addresses.farmLocationAddress.province,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Farm Location Address Zip Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"zipCode\",\n                value: addresses.farmLocationAddress.zipCode,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true), userType === 'Worker' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Worker Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"workerName\",\n              value: workerName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Skills:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"skills\",\n              value: skills,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Communication Address Street:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"street\",\n              value: addresses.communicationAddress.street,\n              onChange: e => handleAddressChange(e, 'communicationAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Communication Address City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              value: addresses.communicationAddress.city,\n              onChange: e => handleAddressChange(e, 'communicationAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Communication Address Province:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"province\",\n              value: addresses.communicationAddress.province,\n              onChange: e => handleAddressChange(e, 'communicationAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Communication Address Zip Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"zipCode\",\n              value: addresses.communicationAddress.zipCode,\n              onChange: e => handleAddressChange(e, 'communicationAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), userType === 'Customer' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Customer Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"customerName\",\n              value: customerName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Shipping Address Street:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"street\",\n              value: addresses.shippingAddress.street,\n              onChange: e => handleAddressChange(e, 'shippingAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Shipping Address City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              value: addresses.shippingAddress.city,\n              onChange: e => handleAddressChange(e, 'shippingAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Shipping Address Province:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"province\",\n              value: addresses.shippingAddress.province,\n              onChange: e => handleAddressChange(e, 'shippingAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Shipping Address Zip Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"zipCode\",\n              value: addresses.shippingAddress.zipCode,\n              onChange: e => handleAddressChange(e, 'shippingAddress'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: goBackToUserTypeSelection,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"LkT9p0ae65WrymIKDFwyzaEpUco=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Navigation","Footer","farmerImage","customerImage","workerImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","userType","setUserType","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","farmerName","setFarmerName","farmerId","setFarmerId","farmerLicense","setFarmerLicense","email","setEmail","phone","setPhone","addresses","setAddresses","farmerAddress","street","city","province","zipCode","farmLocationAddress","shippingAddress","communicationAddress","workerName","setWorkerName","skills","setSkills","customerName","setCustomerName","error","setError","usernameExistsError","setUsernameExistsError","emailExistsError","setEmailExistsError","phoneExistsError","setPhoneExistsError","showForm","setShowForm","sameAddress","setSameAddress","handleSelectUserType","selectedUserType","clearErrors","handleChange","event","name","value","target","clearErrorByName","phoneNumber","replace","length","formattedPhoneNumber","slice","handleAddressChange","addressType","formattedZipCode","formatZipCode","prevAddresses","cleanedZipCode","zipRegex","test","toUpperCase","handleFileChange","files","handleSameAddressChange","prevSameAddress","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","ok","console","log","alert","message","includes","goBackToUserTypeSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","onSubmit","type","onChange","required","e","checked","to","_c","$RefreshReg$"],"sources":["G:/Project/Capst/Crop-Delight/src/Components/Register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../Register/RegisterPage.css';\r\nimport Navigation from '../Navigation/NavigationPage';\r\nimport Footer from '../Footer/FooterPage';\r\nimport farmerImage from '../assets/farmer.png';\r\nimport customerImage from '../assets/customer.png';\r\nimport workerImage from '../assets/worker.png';\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [farmerName, setFarmerName] = useState('');\r\n  const [farmerId, setFarmerId] = useState('');\r\n  const [farmerLicense, setFarmerLicense] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [addresses, setAddresses] = useState({\r\n    farmerAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    farmLocationAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    shippingAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    communicationAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n  });\r\n  const [workerName, setWorkerName] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [usernameExistsError, setUsernameExistsError] = useState('');\r\n  const [emailExistsError, setEmailExistsError] = useState('');\r\n  const [phoneExistsError, setPhoneExistsError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [sameAddress, setSameAddress] = useState(true);\r\n\r\n  const handleSelectUserType = (selectedUserType) => {\r\n    setUserType(selectedUserType);\r\n    setShowForm(true);\r\n    setSameAddress(true); // Set default to true for Farmer\r\n    clearErrors(); // Clear errors when selecting new userType\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    clearErrorByName(name); // Clear error for the specific field\r\n  \r\n    // Phone number format validation and adjustment\r\n    if (name === 'phone') {\r\n      // Remove non-numeric characters from input\r\n      const phoneNumber = value.replace(/\\D/g, '');\r\n  \r\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\r\n      if (phoneNumber.length === 10) {\r\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\r\n        setPhone(formattedPhoneNumber);\r\n      } else {\r\n        setPhone(value); // If not 10 digits, set as entered\r\n      }\r\n    } else {\r\n      // For other fields, update state normally\r\n      switch (name) {\r\n        case 'username':\r\n          setUsername(value);\r\n          break;\r\n        case 'password':\r\n          setPassword(value);\r\n          break;\r\n        case 'confirmPassword':\r\n          setConfirmPassword(value);\r\n          break;\r\n        case 'farmerName':\r\n          setFarmerName(value);\r\n          break;\r\n        case 'farmerId':\r\n          setFarmerId(value);\r\n          break;\r\n        case 'email':\r\n          setEmail(value);\r\n          break;\r\n        case 'workerName':\r\n          setWorkerName(value);\r\n          break;\r\n        case 'skills':\r\n          setSkills(value);\r\n          break;\r\n        case 'customerName':\r\n          setCustomerName(value);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleAddressChange = (event, addressType) => {\r\n    const { name, value } = event.target;\r\n  \r\n    // Validate and format the zip code as L9T 6A6\r\n    const formattedZipCode = formatZipCode(value);\r\n  \r\n    setAddresses((prevAddresses) => ({\r\n      ...prevAddresses,\r\n      [addressType]: {\r\n        ...prevAddresses[addressType],\r\n        [name]: formattedZipCode,\r\n      },\r\n    }));\r\n  };\r\n  \r\n  const formatZipCode = (zipCode) => {\r\n    // Remove non-alphanumeric characters\r\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\r\n\r\n    // Format the zip code as L9T 6A6 if it matches the pattern\r\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\r\n    if (zipRegex.test(cleanedZipCode)) {\r\n      // Insert space between the third and fourth characters\r\n      const formattedZipCode = `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`;\r\n      return formattedZipCode.toUpperCase(); // Ensure uppercase format\r\n    } else {\r\n      return zipCode; // Return as entered if not in the correct format\r\n    }\r\n  };\r\n  \r\n  const handleFileChange = (event) => {\r\n    setFarmerLicense(event.target.files[0]);\r\n  };\r\n\r\n  const handleSameAddressChange = () => {\r\n    setSameAddress((prevSameAddress) => !prevSameAddress);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // Populate FormData based on user input\r\n    const formData = new FormData();\r\n    formData.append('userType', userType);\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n    formData.append('email', email);\r\n    formData.append('phone', phone);\r\n    formData.append('addressStreet', addresses.farmerAddress.street);\r\n    formData.append('addressCity', addresses.farmerAddress.city);\r\n    formData.append('addressProvince', addresses.farmerAddress.province);\r\n    formData.append('addressZipCode', addresses.farmerAddress.zipCode);\r\n    formData.append('sameAddress', sameAddress); // Make sure sameAddress is added\r\n  \r\n    // Append additional fields based on userType\r\n    switch (userType) {\r\n      case 'Farmer':\r\n        formData.append('farmerName', farmerName);\r\n        formData.append('farmerId', farmerId);\r\n        formData.append('farmerLicense', farmerLicense);\r\n  \r\n        if (!sameAddress) {\r\n          formData.append('farmLocationStreet', addresses.farmLocationAddress.street);\r\n          formData.append('farmLocationCity', addresses.farmLocationAddress.city);\r\n          formData.append('farmLocationProvince', addresses.farmLocationAddress.province);\r\n          formData.append('farmLocationZipCode', addresses.farmLocationAddress.zipCode);\r\n        }\r\n        break;\r\n  \r\n      case 'Worker':\r\n        formData.append('workerName', workerName);\r\n        formData.append('skills', skills);\r\n        formData.append('communicationStreet', addresses.communicationAddress.street);\r\n        formData.append('communicationCity', addresses.communicationAddress.city);\r\n        formData.append('communicationProvince', addresses.communicationAddress.province);\r\n        formData.append('communicationZipCode', addresses.communicationAddress.zipCode);\r\n        break;\r\n  \r\n      case 'Customer':\r\n        formData.append('customerName', customerName);\r\n        formData.append('shippingStreet', addresses.shippingAddress.street);\r\n        formData.append('shippingCity', addresses.shippingAddress.city);\r\n        formData.append('shippingProvince', addresses.shippingAddress.province);\r\n        formData.append('shippingZipCode', addresses.shippingAddress.zipCode);\r\n        break;\r\n  \r\n      default:\r\n        break;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:3000/register', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      if (response.ok) {\r\n        console.log('Registration successful:', data);\r\n        setError('Registration successful');\r\n        alert('Registration successful');\r\n        navigate('/login'); // Redirect to login page\r\n      } else {\r\n        // Handle server-side validation errors\r\n        if (data.message.includes('Username already exists')) {\r\n          setUsernameExistsError('Username already exists. Please choose a different one.');\r\n        } else if (data.message.includes('Email already exists')) {\r\n          setEmailExistsError('Email already exists. Please use a different email.');\r\n        } else if (data.message.includes('Phone Number already exists')) {\r\n          setPhoneExistsError('Phone Number already exists. Please use a different phone number.');\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to register. Please try again later.');\r\n    }\r\n  };\r\n  \r\n  const goBackToUserTypeSelection = () => {\r\n    setShowForm(false);\r\n    setUserType('');\r\n    clearErrors(); // Clear errors when going back\r\n  };\r\n\r\n  const clearErrorByName = (name) => {\r\n    switch (name) {\r\n      case 'username':\r\n        setUsernameExistsError('');\r\n        break;\r\n      case 'email':\r\n        setEmailExistsError('');\r\n        break;\r\n      case 'phone':\r\n        setPhoneExistsError('');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setError('');\r\n    setUsernameExistsError('');\r\n    setEmailExistsError('');\r\n    setPhoneExistsError('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <Navigation />\r\n      <div className=\"register-form\">\r\n        {!showForm ? (\r\n          <div className=\"usertype-container\">\r\n            <h2>Select User Type</h2>\r\n            <div className=\"usertype-options\">\r\n              <div className=\"usertype-option\" onClick={() => handleSelectUserType('Farmer')}>\r\n                <img src={farmerImage} alt=\"Farmer\" />\r\n                <p>Farmer</p>\r\n              </div>\r\n              <div className=\"usertype-option\" onClick={() => handleSelectUserType('Customer')}>\r\n                <img src={customerImage} alt=\"Customer\" />\r\n                <p>Customer</p>\r\n              </div>\r\n              <div className=\"usertype-option\" onClick={() => handleSelectUserType('Worker')}>\r\n                <img src={workerImage} alt=\"Worker\" />\r\n                <p>Worker</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit}>\r\n            <h2>Register as {userType}</h2>\r\n            <label>\r\n              Username:\r\n              <input type=\"text\" name=\"username\" value={username} onChange={handleChange} required />\r\n            </label>\r\n            {usernameExistsError && <p className=\"error-message\">{usernameExistsError}</p>}\r\n            <label>\r\n              Password:\r\n              <input type=\"password\" name=\"password\" value={password} onChange={handleChange} required />\r\n            </label>\r\n            <label>\r\n              Confirm Password:\r\n              <input type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} required />\r\n            </label>\r\n            <label>\r\n              Email:\r\n              <input type=\"email\" name=\"email\" value={email} onChange={handleChange} required />\r\n            </label>\r\n            {emailExistsError && <p className=\"error-message\">{emailExistsError}</p>}\r\n            <label>\r\n              Phone Number:\r\n              <input type=\"tel\" name=\"phone\" value={phone} onChange={handleChange} required />\r\n            </label>\r\n            {phoneExistsError && <p className=\"error-message\">{phoneExistsError}</p>}\r\n\r\n            {userType === 'Farmer' && (\r\n              <>\r\n                <label>\r\n                  Farmer Name:\r\n                  <input type=\"text\" name=\"farmerName\" value={farmerName} onChange={handleChange} required />\r\n                </label>\r\n                <label>\r\n                  Farmer ID:\r\n                  <input type=\"text\" name=\"farmerId\" value={farmerId} onChange={handleChange} required />\r\n                </label>\r\n                <label>\r\n                  Farmer License:\r\n                  <input type=\"file\" name=\"farmerLicense\" onChange={handleFileChange} required />\r\n                </label>\r\n                <label>\r\n                  Farmer Address Street:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    value={addresses.farmerAddress.street}\r\n                    onChange={(e) => handleAddressChange(e, 'farmerAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Farmer Address City:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    value={addresses.farmerAddress.city}\r\n                    onChange={(e) => handleAddressChange(e, 'farmerAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Farmer Address Province:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"province\"\r\n                    value={addresses.farmerAddress.province}\r\n                    onChange={(e) => handleAddressChange(e, 'farmerAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Farmer Address Zip Code:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zipCode\"\r\n                    value={addresses.farmerAddress.zipCode}\r\n                    onChange={(e) => handleAddressChange(e, 'farmerAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={sameAddress}\r\n                    onChange={handleSameAddressChange}\r\n                  />\r\n                  Farm Location Address is the same as Farmer Address\r\n                </label>\r\n                {!sameAddress && (\r\n                  <>\r\n                    <label>\r\n                      Farm Location Address Street:\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"street\"\r\n                        value={addresses.farmLocationAddress.street}\r\n                        onChange={(e) => handleAddressChange(e, 'farmLocationAddress')}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      Farm Location Address City:\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        value={addresses.farmLocationAddress.city}\r\n                        onChange={(e) => handleAddressChange(e, 'farmLocationAddress')}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      Farm Location Address Province:\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"province\"\r\n                        value={addresses.farmLocationAddress.province}\r\n                        onChange={(e) => handleAddressChange(e, 'farmLocationAddress')}\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      Farm Location Address Zip Code:\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"zipCode\"\r\n                        value={addresses.farmLocationAddress.zipCode}\r\n                        onChange={(e) => handleAddressChange(e, 'farmLocationAddress')}\r\n                      />\r\n                    </label>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            \r\n            {userType === 'Worker' && (\r\n              <>\r\n                <label>\r\n                  Worker Name:\r\n                  <input type=\"text\" name=\"workerName\" value={workerName} onChange={handleChange} required />\r\n                </label>\r\n                <label>\r\n                  Skills:\r\n                  <textarea name=\"skills\" value={skills} onChange={handleChange} required />\r\n                </label>\r\n                <label>\r\n                  Communication Address Street:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    value={addresses.communicationAddress.street}\r\n                    onChange={(e) => handleAddressChange(e, 'communicationAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Communication Address City:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    value={addresses.communicationAddress.city}\r\n                    onChange={(e) => handleAddressChange(e, 'communicationAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Communication Address Province:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"province\"\r\n                    value={addresses.communicationAddress.province}\r\n                    onChange={(e) => handleAddressChange(e, 'communicationAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Communication Address Zip Code:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zipCode\"\r\n                    value={addresses.communicationAddress.zipCode}\r\n                    onChange={(e) => handleAddressChange(e, 'communicationAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n              </>\r\n            )}\r\n            \r\n            {userType === 'Customer' && (\r\n              <>\r\n                <label>\r\n                  Customer Name:\r\n                  <input type=\"text\" name=\"customerName\" value={customerName} onChange={handleChange} required />\r\n                </label>\r\n                <label>\r\n                  Shipping Address Street:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    value={addresses.shippingAddress.street}\r\n                    onChange={(e) => handleAddressChange(e, 'shippingAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Shipping Address City:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    value={addresses.shippingAddress.city}\r\n                    onChange={(e) => handleAddressChange(e, 'shippingAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Shipping Address Province:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"province\"\r\n                    value={addresses.shippingAddress.province}\r\n                    onChange={(e) => handleAddressChange(e, 'shippingAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Shipping Address Zip Code:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"zipCode\"\r\n                    value={addresses.shippingAddress.zipCode}\r\n                    onChange={(e) => handleAddressChange(e, 'shippingAddress')}\r\n                    required\r\n                  />\r\n                </label>\r\n              </>\r\n            )}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            <button type=\"submit\">Register</button>\r\n            <button type=\"button\" onClick={goBackToUserTypeSelection}>Go Back</button>\r\n            <p>\r\n              Already registered? <Link to=\"/login\">Login here</Link>\r\n            </p>\r\n          </form>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}