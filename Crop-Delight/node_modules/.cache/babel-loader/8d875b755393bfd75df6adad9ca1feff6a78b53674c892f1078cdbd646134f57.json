{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\Capst\\\\Crop-Delight\\\\src\\\\Components\\\\Register\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Register/RegisterPage.css';\nimport Navigation from '../Navigation/NavigationPage';\nimport Footer from '../Footer/FooterPage';\nimport farmerImage from '../assets/farmer.png';\nimport customerImage from '../assets/customer.png';\nimport workerImage from '../assets/worker.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [farmerName, setFarmerName] = useState('');\n  const [farmerId, setFarmerId] = useState('');\n  const [farmerLicense, setFarmerLicense] = useState(null);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addresses, setAddresses] = useState({\n    farmerAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    farmLocationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    shippingAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    communicationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    }\n  });\n  const [workerName, setWorkerName] = useState('');\n  const [skills, setSkills] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [error, setError] = useState('');\n  const [usernameExistsError, setUsernameExistsError] = useState('');\n  const [emailExistsError, setEmailExistsError] = useState('');\n  const [phoneExistsError, setPhoneExistsError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [sameAddress, setSameAddress] = useState(true);\n  const handleSelectUserType = selectedUserType => {\n    setUserType(selectedUserType);\n    setShowForm(true);\n    setSameAddress(true); // Set default to true for Farmer\n    clearErrors(); // Clear errors when selecting new userType\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    clearErrorByName(name); // Clear error for the specific field\n\n    // Phone number format validation and adjustment\n    if (name === 'phone') {\n      // Remove non-numeric characters from input\n      const phoneNumber = value.replace(/\\D/g, '');\n\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\n\n      if (phoneNumber.length === 10) {\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n        setPhone(formattedPhoneNumber);\n      } else {\n        setPhone(value); // If not 10 digits, set as entered\n      }\n    } else {\n      // For other fields, update state normally\n      switch (name) {\n        case 'username':\n          setUsername(value);\n          break;\n        case 'password':\n          setPassword(value);\n          break;\n        case 'confirmPassword':\n          setConfirmPassword(value);\n          break;\n        case 'farmerName':\n          setFarmerName(value);\n          break;\n        case 'farmerId':\n          setFarmerId(value);\n          break;\n        case 'email':\n          setEmail(value);\n          break;\n        case 'workerName':\n          setWorkerName(value);\n          break;\n        case 'skills':\n          setSkills(value);\n          break;\n        case 'customerName':\n          setCustomerName(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleAddressChange = (event, addressType) => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Validate and format the zip code as L9T 6A6\n    const formattedZipCode = formatZipCode(value);\n    setAddresses(prevAddresses => ({\n      ...prevAddresses,\n      [addressType]: {\n        ...prevAddresses[addressType],\n        [name]: formattedZipCode\n      }\n    }));\n  };\n  const formatZipCode = zipCode => {\n    // Remove non-alphanumeric characters\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\n\n    // Format the zip code as L9T 6A6 if it matches the pattern\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\n    if (zipRegex.test(cleanedZipCode)) {\n      // Insert space between the third and fourth characters\n      const formattedZipCode = `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`;\n      return formattedZipCode.toUpperCase(); // Ensure uppercase format\n    } else {\n      return zipCode; // Return as entered if not in the correct format\n    }\n  };\n  const handleFileChange = event => {\n    setFarmerLicense(event.target.files[0]);\n  };\n  const handleSameAddressChange = () => {\n    setSameAddress(prevSameAddress => !prevSameAddress);\n  };\n  app.post('/register', upload.single('farmerLicense'), async (req, res) => {\n    const {\n      username,\n      password,\n      userType,\n      email,\n      phone,\n      addressStreet,\n      addressCity,\n      addressProvince,\n      addressZipCode\n    } = req.body;\n    if (!username || !password || !userType || !email || !phone || !addressStreet || !addressCity || !addressProvince || !addressZipCode) {\n      return res.status(400).json({\n        message: 'Required fields are missing'\n      });\n    }\n    try {\n      // Check if username or email or phone already exists\n      const existingUser = await findItem('users', {\n        $or: [{\n          username\n        }, {\n          email\n        }, {\n          phone\n        }]\n      });\n      if (existingUser) {\n        const existingFields = [];\n        if (existingUser.username === username) existingFields.push('Username');\n        if (existingUser.email === email) existingFields.push('Email');\n        if (existingUser.phone === phone) existingFields.push('Phone Number');\n        return res.status(400).json({\n          message: `${existingFields.join(', ')} already exists`\n        });\n      }\n\n      // Prepare data based on user type\n      let userData = {\n        username,\n        password,\n        userType,\n        email,\n        phone\n      };\n      switch (userType) {\n        case 'Farmer':\n          const {\n            farmerName,\n            farmerId,\n            sameAddress\n          } = req.body;\n          const farmerLicensePath = req.file ? req.file.path : '';\n          if (!farmerName || !farmerId || !farmerLicense || !addressStreet || !addressCity || !addressProvince || !addressZipCode) {\n            return res.status(400).json({\n              message: 'All Farmer details are required'\n            });\n          }\n          if (sameAddress === 'yes') {\n            // If sameAddress is true, copy farmerAddress to farmLocationAddress\n            userData = {\n              ...userData,\n              farmerName,\n              farmerId,\n              farmerLicense: farmerLicensePath,\n              farmerAddress: {\n                street: addressStreet,\n                city: addressCity,\n                province: addressProvince,\n                zipCode: addressZipCode\n              },\n              farmLocationAddress: {\n                street: addressStreet,\n                city: addressCity,\n                province: addressProvince,\n                zipCode: addressZipCode\n              }\n            };\n          } else {\n            // If sameAddress is false, use provided farmLocationAddress\n            const {\n              farmLocationStreet,\n              farmLocationCity,\n              farmLocationProvince,\n              farmLocationZipCode\n            } = req.body;\n            if (!farmLocationStreet || !farmLocationCity || !farmLocationProvince || !farmLocationZipCode) {\n              return res.status(400).json({\n                message: 'Farm Location Address is required when Same as Farm Location is No'\n              });\n            }\n            userData = {\n              ...userData,\n              farmerName,\n              farmerId,\n              farmerLicense: farmerLicensePath,\n              farmerAddress: {\n                street: addressStreet,\n                city: addressCity,\n                province: addressProvince,\n                zipCode: addressZipCode\n              },\n              farmLocationAddress: {\n                street: farmLocationStreet,\n                city: farmLocationCity,\n                province: farmLocationProvince,\n                zipCode: farmLocationZipCode\n              }\n            };\n          }\n          break;\n        case 'Customer':\n          const {\n            customerName,\n            shippingStreet,\n            shippingCity,\n            shippingProvince,\n            shippingZipCode\n          } = req.body;\n          if (!customerName || !shippingStreet || !shippingCity || !shippingProvince || !shippingZipCode) {\n            return res.status(400).json({\n              message: 'Customer name and shipping address are required'\n            });\n          }\n          userData = {\n            ...userData,\n            customerName,\n            shippingAddress: {\n              street: shippingStreet,\n              city: shippingCity,\n              province: shippingProvince,\n              zipCode: shippingZipCode\n            }\n          };\n          break;\n        case 'Worker':\n          const {\n            workerName,\n            communicationStreet,\n            communicationCity,\n            communicationProvince,\n            communicationZipCode,\n            skills\n          } = req.body;\n          if (!workerName || !communicationStreet || !communicationCity || !communicationProvince || !communicationZipCode || !skills) {\n            return res.status(400).json({\n              message: 'All Worker details are required'\n            });\n          }\n          userData = {\n            ...userData,\n            workerName,\n            communicationAddress: {\n              street: communicationStreet,\n              city: communicationCity,\n              province: communicationProvince,\n              zipCode: communicationZipCode\n            },\n            skills\n          };\n          break;\n        default:\n          return res.status(400).json({\n            message: 'Invalid user type'\n          });\n      }\n      await insertItem('users', userData);\n      res.status(201).json({\n        message: 'Registration successful'\n      });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({\n        message: 'Internal server error'\n      });\n    }\n  });\n  const goBackToUserTypeSelection = () => {\n    setShowForm(false);\n    setUserType('');\n    clearErrors(); // Clear errors when going back\n  };\n  const clearErrorByName = name => {\n    switch (name) {\n      case 'username':\n        setUsernameExistsError('');\n        break;\n      case 'email':\n        setEmailExistsError('');\n        break;\n      case 'phone':\n        setPhoneExistsError('');\n        break;\n      default:\n        break;\n    }\n  };\n  const clearErrors = () => {\n    setError('');\n    setUsernameExistsError('');\n    setEmailExistsError('');\n    setPhoneExistsError('');\n  };\n  const renderProvinceOptions = () => {\n    const provinces = ['Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland and Labrador', 'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island', 'Quebec', 'Saskatchewan', 'Yukon'];\n    return provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: province,\n      children: province\n    }, province, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: !showForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"userSelectionHeader\",\n          children: \"Register as\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-type-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            onClick: () => handleSelectUserType('Farmer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: farmerImage,\n              alt: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n            onClick: () => handleSelectUserType('Customer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: customerImage,\n              alt: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n            onClick: () => handleSelectUserType('Worker'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: workerImage,\n              alt: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"userSelectionHeader\",\n          children: [\"Register as \", userType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-columns\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"username\",\n                  value: username,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), usernameExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: usernameExistsError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  value: password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Confirm Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"confirmPassword\",\n                  value: confirmPassword,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this), emailExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: emailExistsError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Phone Number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"tel\",\n                  name: \"phone\",\n                  value: phone,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this), phoneExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: phoneExistsError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-column\",\n              children: [userType === 'Farmer' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Farmer Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"farmerName\",\n                    value: farmerName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Farmer ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"farmerId\",\n                    value: farmerId,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Farmer License:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    name: \"farmerLicense\",\n                    onChange: handleFileChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Farmer Address:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"street\",\n                    placeholder: \"Street\",\n                    value: addresses.farmerAddress.street,\n                    onChange: e => handleAddressChange(e, 'farmerAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"city\",\n                    placeholder: \"City\",\n                    value: addresses.farmerAddress.city,\n                    onChange: e => handleAddressChange(e, 'farmerAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"province\",\n                    value: addresses.farmerAddress.province,\n                    onChange: e => handleAddressChange(e, 'farmerAddress'),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Province\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 27\n                    }, this), renderProvinceOptions()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"zipCode\",\n                    placeholder: \"Zip Code\",\n                    value: addresses.farmerAddress.zipCode,\n                    onChange: e => handleAddressChange(e, 'farmerAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Same as Farm Location?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"radio-options\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      id: \"sameAddress\",\n                      name: \"sameAddress\",\n                      value: \"yes\",\n                      checked: sameAddress,\n                      onChange: handleSameAddressChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"yes\",\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      id: \"sameAddress\",\n                      name: \"sameAddress\",\n                      value: \"no\",\n                      checked: !sameAddress,\n                      onChange: handleSameAddressChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"no\",\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this), !sameAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Farm Location Address:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"street\",\n                    placeholder: \"Street\",\n                    value: addresses.farmLocationAddress.street,\n                    onChange: e => handleAddressChange(e, 'farmLocationAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"city\",\n                    placeholder: \"City\",\n                    value: addresses.farmLocationAddress.city,\n                    onChange: e => handleAddressChange(e, 'farmLocationAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"province\",\n                    value: addresses.farmLocationAddress.province,\n                    onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Province\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 29\n                    }, this), renderProvinceOptions()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"zipCode\",\n                    placeholder: \"Zip Code\",\n                    value: addresses.farmLocationAddress.zipCode,\n                    onChange: e => handleAddressChange(e, 'farmLocationAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), userType === 'Customer' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Customer Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"customerName\",\n                    value: customerName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Interested to Buy:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: \"4\",\n                    name: \"interestToBuy\",\n                    placeholder: \"Anything you are interested to buy\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Shipping Address:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"street\",\n                    placeholder: \"Street\",\n                    value: addresses.shippingAddress.street,\n                    onChange: e => handleAddressChange(e, 'shippingAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"city\",\n                    placeholder: \"City\",\n                    value: addresses.shippingAddress.city,\n                    onChange: e => handleAddressChange(e, 'shippingAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"province\",\n                    value: addresses.shippingAddress.province,\n                    onChange: e => handleAddressChange(e, 'shippingAddress'),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Province\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 27\n                    }, this), renderProvinceOptions()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"zipCode\",\n                    placeholder: \"Zip Code\",\n                    value: addresses.shippingAddress.zipCode,\n                    onChange: e => handleAddressChange(e, 'shippingAddress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), userType === 'Worker' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Worker Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"workerName\",\n                    value: workerName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Skills:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: \"4\",\n                    name: \"skills\",\n                    value: skills,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), userType === 'Worker' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Communication Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"street\",\n                  placeholder: \"Street\",\n                  value: addresses.communicationAddress.street,\n                  onChange: e => handleAddressChange(e, 'communicationAddress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"city\",\n                  placeholder: \"City\",\n                  value: addresses.communicationAddress.city,\n                  onChange: e => handleAddressChange(e, 'communicationAddress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"province\",\n                  value: addresses.communicationAddress.province,\n                  onChange: e => handleAddressChange(e, 'communicationAddress'),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Province\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this), renderProvinceOptions()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"zipCode\",\n                  placeholder: \"Zip Code\",\n                  value: addresses.communicationAddress.zipCode,\n                  onChange: e => handleAddressChange(e, 'communicationAddress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: goBackToUserTypeSelection,\n              children: \"Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bottomnote\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"LkT9p0ae65WrymIKDFwyzaEpUco=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\n;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Navigation","Footer","farmerImage","customerImage","workerImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","userType","setUserType","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","farmerName","setFarmerName","farmerId","setFarmerId","farmerLicense","setFarmerLicense","email","setEmail","phone","setPhone","addresses","setAddresses","farmerAddress","street","city","province","zipCode","farmLocationAddress","shippingAddress","communicationAddress","workerName","setWorkerName","skills","setSkills","customerName","setCustomerName","error","setError","usernameExistsError","setUsernameExistsError","emailExistsError","setEmailExistsError","phoneExistsError","setPhoneExistsError","showForm","setShowForm","sameAddress","setSameAddress","handleSelectUserType","selectedUserType","clearErrors","handleChange","event","name","value","target","clearErrorByName","phoneNumber","replace","length","formattedPhoneNumber","slice","handleAddressChange","addressType","formattedZipCode","formatZipCode","prevAddresses","cleanedZipCode","zipRegex","test","toUpperCase","handleFileChange","files","handleSameAddressChange","prevSameAddress","app","post","upload","single","req","res","addressStreet","addressCity","addressProvince","addressZipCode","body","status","json","message","existingUser","findItem","$or","existingFields","push","join","userData","farmerLicensePath","file","path","farmLocationStreet","farmLocationCity","farmLocationProvince","farmLocationZipCode","shippingStreet","shippingCity","shippingProvince","shippingZipCode","communicationStreet","communicationCity","communicationProvince","communicationZipCode","insertItem","console","goBackToUserTypeSelection","renderProvinceOptions","provinces","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","onSubmit","handleSubmit","type","onChange","placeholder","e","id","checked","htmlFor","rows","to","_c","$RefreshReg$"],"sources":["G:/Project/Capst/Crop-Delight/src/Components/Register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../Register/RegisterPage.css';\r\nimport Navigation from '../Navigation/NavigationPage';\r\nimport Footer from '../Footer/FooterPage';\r\nimport farmerImage from '../assets/farmer.png';\r\nimport customerImage from '../assets/customer.png';\r\nimport workerImage from '../assets/worker.png';\r\n\r\n\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [farmerName, setFarmerName] = useState('');\r\n  const [farmerId, setFarmerId] = useState('');\r\n  const [farmerLicense, setFarmerLicense] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [addresses, setAddresses] = useState({\r\n    farmerAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    farmLocationAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    shippingAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    communicationAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n  });\r\n  const [workerName, setWorkerName] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [usernameExistsError, setUsernameExistsError] = useState('');\r\n  const [emailExistsError, setEmailExistsError] = useState('');\r\n  const [phoneExistsError, setPhoneExistsError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [sameAddress, setSameAddress] = useState(true);\r\n\r\n  const handleSelectUserType = (selectedUserType) => {\r\n    setUserType(selectedUserType);\r\n    setShowForm(true);\r\n    setSameAddress(true); // Set default to true for Farmer\r\n    clearErrors(); // Clear errors when selecting new userType\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    clearErrorByName(name); // Clear error for the specific field\r\n  \r\n    // Phone number format validation and adjustment\r\n    if (name === 'phone') {\r\n      // Remove non-numeric characters from input\r\n      const phoneNumber = value.replace(/\\D/g, '');\r\n  \r\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\r\n \r\n      if (phoneNumber.length === 10) {\r\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\r\n        setPhone(formattedPhoneNumber);} else {\r\n        setPhone(value); // If not 10 digits, set as entered\r\n      }\r\n    } else {\r\n      // For other fields, update state normally\r\n      switch (name) {\r\n        case 'username':\r\n          setUsername(value);\r\n          break;\r\n        case 'password':\r\n          setPassword(value);\r\n          break;\r\n        case 'confirmPassword':\r\n          setConfirmPassword(value);\r\n          break;\r\n        case 'farmerName':\r\n          setFarmerName(value);\r\n          break;\r\n        case 'farmerId':\r\n          setFarmerId(value);\r\n          break;\r\n        case 'email':\r\n          setEmail(value);\r\n          break;\r\n        case 'workerName':\r\n          setWorkerName(value);\r\n          break;\r\n        case 'skills':\r\n          setSkills(value);\r\n          break;\r\n        case 'customerName':\r\n          setCustomerName(value);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAddressChange = (event, addressType) => {\r\n    const { name, value } = event.target;\r\n  \r\n    // Validate and format the zip code as L9T 6A6\r\n    const formattedZipCode = formatZipCode(value);\r\n  \r\n    setAddresses((prevAddresses) => ({\r\n      ...prevAddresses,\r\n      [addressType]: {\r\n        ...prevAddresses[addressType],\r\n        [name]: formattedZipCode,\r\n      },\r\n    }));\r\n  };\r\n  \r\n  const formatZipCode = (zipCode) => {\r\n    // Remove non-alphanumeric characters\r\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\r\n\r\n    // Format the zip code as L9T 6A6 if it matches the pattern\r\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\r\n    if (zipRegex.test(cleanedZipCode)) {\r\n      // Insert space between the third and fourth characters\r\n      const formattedZipCode = `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`;\r\n      return formattedZipCode.toUpperCase(); // Ensure uppercase format\r\n    } else {\r\n      return zipCode; // Return as entered if not in the correct format\r\n    }\r\n  };\r\n  \r\n\r\n  const handleFileChange = (event) => {\r\n    setFarmerLicense(event.target.files[0]);\r\n  };\r\n\r\n  const handleSameAddressChange = () => {\r\n    setSameAddress((prevSameAddress) => !prevSameAddress);\r\n    };\r\n    app.post('/register', upload.single('farmerLicense'), async (req, res) => {\r\n      const { username, password, userType, email, phone, addressStreet, addressCity, addressProvince, addressZipCode } = req.body;\r\n    \r\n      if (!username || !password || !userType || !email || !phone || !addressStreet || !addressCity || !addressProvince || !addressZipCode) {\r\n        return res.status(400).json({ message: 'Required fields are missing' });\r\n      }\r\n    \r\n      try {\r\n        // Check if username or email or phone already exists\r\n        const existingUser = await findItem('users', { $or: [{ username }, { email }, { phone }] });\r\n        if (existingUser) {\r\n          const existingFields = [];\r\n          if (existingUser.username === username) existingFields.push('Username');\r\n          if (existingUser.email === email) existingFields.push('Email');\r\n          if (existingUser.phone === phone) existingFields.push('Phone Number');\r\n          return res.status(400).json({ message: `${existingFields.join(', ')} already exists` });\r\n        }\r\n    \r\n        // Prepare data based on user type\r\n        let userData = { username, password, userType, email, phone };\r\n    \r\n        switch (userType) {\r\n          case 'Farmer':\r\n            const { farmerName, farmerId, sameAddress } = req.body;\r\n            const farmerLicensePath = req.file ? req.file.path : '';\r\n    \r\n            if (!farmerName || !farmerId || !farmerLicense || !addressStreet || !addressCity || !addressProvince || !addressZipCode) {\r\n              return res.status(400).json({ message: 'All Farmer details are required' });\r\n            }\r\n    \r\n            if (sameAddress === 'yes') {\r\n              // If sameAddress is true, copy farmerAddress to farmLocationAddress\r\n              userData = {\r\n                ...userData,\r\n                farmerName,\r\n                farmerId,\r\n                farmerLicense: farmerLicensePath,\r\n                farmerAddress: {\r\n                  street: addressStreet,\r\n                  city: addressCity,\r\n                  province: addressProvince,\r\n                  zipCode: addressZipCode\r\n                },\r\n                farmLocationAddress: {\r\n                  street: addressStreet,\r\n                  city: addressCity,\r\n                  province: addressProvince,\r\n                  zipCode: addressZipCode\r\n                }\r\n              };\r\n            } else {\r\n              // If sameAddress is false, use provided farmLocationAddress\r\n              const { farmLocationStreet, farmLocationCity, farmLocationProvince, farmLocationZipCode } = req.body;\r\n    \r\n              if (!farmLocationStreet || !farmLocationCity || !farmLocationProvince || !farmLocationZipCode) {\r\n                return res.status(400).json({ message: 'Farm Location Address is required when Same as Farm Location is No' });\r\n              }\r\n    \r\n              userData = {\r\n                ...userData,\r\n                farmerName,\r\n                farmerId,\r\n                farmerLicense: farmerLicensePath,\r\n                farmerAddress: {\r\n                  street: addressStreet,\r\n                  city: addressCity,\r\n                  province: addressProvince,\r\n                  zipCode: addressZipCode\r\n                },\r\n                farmLocationAddress: {\r\n                  street: farmLocationStreet,\r\n                  city: farmLocationCity,\r\n                  province: farmLocationProvince,\r\n                  zipCode: farmLocationZipCode\r\n                }\r\n              };\r\n            }\r\n            break;\r\n    \r\n          case 'Customer':\r\n            const { customerName, shippingStreet, shippingCity, shippingProvince, shippingZipCode } = req.body;\r\n    \r\n            if (!customerName || !shippingStreet || !shippingCity || !shippingProvince || !shippingZipCode) {\r\n              return res.status(400).json({ message: 'Customer name and shipping address are required' });\r\n            }\r\n    \r\n            userData = {\r\n              ...userData,\r\n              customerName,\r\n              shippingAddress: {\r\n                street: shippingStreet,\r\n                city: shippingCity,\r\n                province: shippingProvince,\r\n                zipCode: shippingZipCode\r\n              }\r\n            };\r\n            break;\r\n    \r\n          case 'Worker':\r\n            const { workerName, communicationStreet, communicationCity, communicationProvince, communicationZipCode, skills } = req.body;\r\n    \r\n            if (!workerName || !communicationStreet || !communicationCity || !communicationProvince || !communicationZipCode || !skills) {\r\n              return res.status(400).json({ message: 'All Worker details are required' });\r\n            }\r\n    \r\n            userData = {\r\n              ...userData,\r\n              workerName,\r\n              communicationAddress: {\r\n                street: communicationStreet,\r\n                city: communicationCity,\r\n                province: communicationProvince,\r\n                zipCode: communicationZipCode\r\n              },\r\n              skills\r\n            };\r\n            break;\r\n    \r\n          default:\r\n            return res.status(400).json({ message: 'Invalid user type' });\r\n        }\r\n    \r\n        await insertItem('users', userData);\r\n        res.status(201).json({ message: 'Registration successful' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        res.status(500).json({ message: 'Internal server error' });\r\n      }\r\n    });\r\n    \r\n    \r\n    \r\n\r\n  const goBackToUserTypeSelection = () => {\r\n    setShowForm(false);\r\n    setUserType('');\r\n    clearErrors(); // Clear errors when going back\r\n  };\r\n\r\n  const clearErrorByName = (name) => {\r\n    switch (name) {\r\n      case 'username':\r\n        setUsernameExistsError('');\r\n        break;\r\n      case 'email':\r\n        setEmailExistsError('');\r\n        break;\r\n      case 'phone':\r\n        setPhoneExistsError('');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setError('');\r\n    setUsernameExistsError('');\r\n    setEmailExistsError('');\r\n    setPhoneExistsError('');\r\n  };\r\n\r\n  const renderProvinceOptions = () => {\r\n    const provinces = [\r\n      'Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland and Labrador',\r\n      'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island',\r\n      'Quebec', 'Saskatchewan', 'Yukon'\r\n    ];\r\n\r\n    return provinces.map(province => (\r\n      <option key={province} value={province}>{province}</option>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className=\"register-page\">\r\n        {!showForm ? (\r\n          <div>\r\n            <h2 className=\"userSelectionHeader\">Register as</h2>\r\n            <div className=\"user-type-selection\">\r\n              <figure onClick={() => handleSelectUserType('Farmer')}>\r\n                <img src={farmerImage} alt=\"Farmer\" />\r\n                <figcaption>Farmer</figcaption>\r\n              </figure>\r\n              <figure onClick={() => handleSelectUserType('Customer')}>\r\n                <img src={customerImage} alt=\"Customer\" />\r\n                <figcaption>Customer</figcaption>\r\n              </figure>\r\n              <figure onClick={() => handleSelectUserType('Worker')}>\r\n                <img src={workerImage} alt=\"Worker\" />\r\n                <figcaption>Worker</figcaption>\r\n              </figure>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"register-form-section\">\r\n            <h2 className=\"userSelectionHeader\">Register as {userType}</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-columns\">\r\n                <div className=\"form-column\">\r\n                  <div className=\"form-group\">\r\n                    <label>Username:</label>\r\n                    <input type=\"text\" name=\"username\" value={username} onChange={handleChange} />\r\n                    {usernameExistsError && <p className=\"error\">{usernameExistsError}</p>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={handleChange} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Confirm Password:</label>\r\n                    <input type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={handleChange} />\r\n                    {emailExistsError && <p className=\"error\">{emailExistsError}</p>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Phone Number:</label>\r\n                    <input type=\"tel\" name=\"phone\" value={phone} onChange={handleChange} />\r\n                    {phoneExistsError && <p className=\"error\">{phoneExistsError}</p>}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-column\">\r\n                  {userType === 'Farmer' && (\r\n                    <>\r\n                      <div className=\"form-group\">\r\n                        <label>Farmer Name:</label>\r\n                        <input type=\"text\" name=\"farmerName\" value={farmerName} onChange={handleChange} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Farmer ID:</label>\r\n                        <input type=\"text\" name=\"farmerId\" value={farmerId} onChange={handleChange} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Farmer License:</label>\r\n                        <input type=\"file\" name=\"farmerLicense\" onChange={handleFileChange} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Farmer Address:</label>\r\n                        <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.farmerAddress.street} onChange={(e) => handleAddressChange(e, 'farmerAddress')} />\r\n                        <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.farmerAddress.city} onChange={(e) => handleAddressChange(e, 'farmerAddress')} />\r\n                        <select name=\"province\" value={addresses.farmerAddress.province} onChange={(e) => handleAddressChange(e, 'farmerAddress')}>\r\n                          <option value=\"\">Select Province</option>\r\n                          {renderProvinceOptions()}\r\n                        </select>\r\n                        <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.farmerAddress.zipCode} onChange={(e) => handleAddressChange(e, 'farmerAddress')} />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>Same as Farm Location?</label>\r\n                        <div className=\"radio-options\">\r\n                          <input type=\"radio\" id=\"sameAddress\" name=\"sameAddress\" value=\"yes\" checked={sameAddress} onChange={handleSameAddressChange} />\r\n                          <label htmlFor=\"yes\">Yes</label>\r\n                          <input type=\"radio\" id=\"sameAddress\" name=\"sameAddress\" value=\"no\" checked={!sameAddress} onChange={handleSameAddressChange} />\r\n                          <label htmlFor=\"no\">No</label>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {!sameAddress && (\r\n                        <div className=\"form-group\">\r\n                          <label>Farm Location Address:</label>\r\n                          <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.farmLocationAddress.street} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} />\r\n                          <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.farmLocationAddress.city} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} />\r\n                          <select name=\"province\" value={addresses.farmLocationAddress.province} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')}>\r\n                            <option value=\"\">Select Province</option>\r\n                            {renderProvinceOptions()}\r\n                          </select>\r\n                          <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.farmLocationAddress.zipCode} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} />\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n\r\n                  {userType === 'Customer' && (\r\n                    <>\r\n                      <div className=\"form-group\">\r\n                        <label>Customer Name:</label>\r\n                        <input type=\"text\" name=\"customerName\" value={customerName} onChange={handleChange} />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>Interested to Buy:</label>\r\n                        <textarea rows=\"4\" name=\"interestToBuy\" placeholder=\"Anything you are interested to buy\" onChange={handleChange} />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>Shipping Address:</label>\r\n                        <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.shippingAddress.street} onChange={(e) => handleAddressChange(e, 'shippingAddress')} />\r\n                        <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.shippingAddress.city} onChange={(e) => handleAddressChange(e, 'shippingAddress')} />\r\n                        <select name=\"province\" value={addresses.shippingAddress.province} onChange={(e) => handleAddressChange(e, 'shippingAddress')}>\r\n                          <option value=\"\">Select Province</option>\r\n                          {renderProvinceOptions()}\r\n                        </select>\r\n                        <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.shippingAddress.zipCode} onChange={(e) => handleAddressChange(e, 'shippingAddress')} />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {userType === 'Worker' && (\r\n                    <>\r\n                      <div className=\"form-group\">\r\n                        <label>Worker Name:</label>\r\n                        <input type=\"text\" name=\"workerName\" value={workerName} onChange={handleChange} />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Skills:</label>\r\n                        <textarea rows=\"4\" name=\"skills\" value={skills} onChange={handleChange} />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {userType === 'Worker' && (\r\n                    <div className=\"form-group\">\r\n                      <label>Communication Address:</label>\r\n                      <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.communicationAddress.street} onChange={(e) => handleAddressChange(e, 'communicationAddress')} />\r\n                      <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.communicationAddress.city} onChange={(e) => handleAddressChange(e, 'communicationAddress')} />\r\n                      <select name=\"province\" value={addresses.communicationAddress.province} onChange={(e) => handleAddressChange(e, 'communicationAddress')}>\r\n                        <option value=\"\">Select Province</option>\r\n                        {renderProvinceOptions()}\r\n                      </select>\r\n                      <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.communicationAddress.zipCode} onChange={(e) => handleAddressChange(e, 'communicationAddress')} />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"button-container\">\r\n                <button type=\"submit\">Register</button>\r\n                <button type=\"button\" onClick={goBackToUserTypeSelection}>Go Back</button>\r\n              </div>\r\n\r\n              {error && <p className=\"error\">{error}</p>}\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className=\"bottomnote\">\r\n        Already have an account? <Link to=\"/login\">Login here</Link>\r\n      </p>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}