{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\Capst\\\\Crop-Delight\\\\src\\\\Components\\\\Register\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Register/RegisterPage.css';\nimport Navigation from '../Navigation/NavigationPage';\nimport Footer from '../Footer/FooterPage';\nimport farmerImage from '../assets/farmer.png';\nimport customerImage from '../assets/customer.png';\nimport workerImage from '../assets/worker.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [farmerName, setFarmerName] = useState('');\n  const [farmerId, setFarmerId] = useState('');\n  const [farmerLicense, setFarmerLicense] = useState(null);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addresses, setAddresses] = useState({\n    farmerAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    farmLocationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    shippingAddress: {\n      // Initialize shippingAddress\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    communicationAddress: {\n      // Initialize communicationAddress\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    }\n  });\n  const [workerName, setWorkerName] = useState('');\n  const [skills, setSkills] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [error, setError] = useState('');\n  const [usernameExistsError, setUsernameExistsError] = useState('');\n  const [emailExistsError, setEmailExistsError] = useState('');\n  const [phoneExistsError, setPhoneExistsError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [sameAddress, setSameAddress] = useState(true);\n  const handleSelectUserType = selectedUserType => {\n    setUserType(selectedUserType);\n    setShowForm(true);\n    setSameAddress(true); // Set default to true for Farmer\n    clearErrors(); // Clear errors when selecting new userType\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    clearErrorByName(name); // Clear error for the specific field\n\n    // Phone number format validation and adjustment\n    if (name === 'phone') {\n      // Remove non-numeric characters from input\n      const phoneNumber = value.replace(/\\D/g, '');\n\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\n      if (phoneNumber.length === 10) {\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n        setPhone(formattedPhoneNumber);\n      } else {\n        setPhone(value); // If not 10 digits, set as entered\n      }\n    } else {\n      // For other fields, update state normally\n      switch (name) {\n        case 'username':\n          setUsername(value);\n          break;\n        case 'password':\n          setPassword(value);\n          break;\n        case 'confirmPassword':\n          setConfirmPassword(value);\n          break;\n        case 'farmerName':\n          setFarmerName(value);\n          break;\n        case 'farmerId':\n          setFarmerId(value);\n          break;\n        case 'email':\n          setEmail(value);\n          break;\n        case 'workerName':\n          setWorkerName(value);\n          break;\n        case 'skills':\n          setSkills(value);\n          break;\n        case 'customerName':\n          setCustomerName(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleAddressChange = (event, addressType) => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Validate and format the zip code as L9T 6A6\n    const formattedZipCode = formatZipCode(value);\n    setAddresses(prevAddresses => ({\n      ...prevAddresses,\n      [addressType]: {\n        ...prevAddresses[addressType],\n        [name]: formattedZipCode\n      }\n    }));\n  };\n  const formatZipCode = zipCode => {\n    // Remove non-alphanumeric characters\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\n\n    // Format the zip code as L9T 6A6 if it matches the pattern\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\n    if (zipRegex.test(cleanedZipCode)) {\n      // Insert space between the third and fourth characters\n      const formattedZipCode = `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`;\n      return formattedZipCode.toUpperCase(); // Ensure uppercase format\n    } else {\n      return zipCode; // Return as entered if not in the correct format\n    }\n  };\n  const handleFileChange = event => {\n    setFarmerLicense(event.target.files[0]);\n  };\n  const handleSameAddressChange = () => {\n    setSameAddress(prevSameAddress => !prevSameAddress);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Check required fields based on userType\n    let requiredFields = ['username', 'password', 'confirmPassword', 'email', 'phone'];\n    switch (userType) {\n      case 'Farmer':\n        requiredFields = [...requiredFields, 'farmerName', 'farmerId', 'farmerLicense'];\n        if (!sameAddress) {\n          requiredFields = [...requiredFields, 'farmLocationAddress'];\n        }\n        break;\n      case 'Worker':\n        requiredFields = [...requiredFields, 'workerName', 'skills', 'communicationAddress'];\n        break;\n      case 'Customer':\n        requiredFields = [...requiredFields, 'customerName', 'shippingAddress'];\n        break;\n      default:\n        break;\n    }\n\n    // Check if all required fields are filled\n    const isAnyFieldMissing = requiredFields.some(field => {\n      if (field === 'farmLocationAddress' && sameAddress) {\n        return false; // If sameAddress is true, farmLocationAddress is not required\n      }\n      // Check if the field is an address type\n      if (field.includes('.')) {\n        const [addressType, addressField] = field.split('.');\n        return !addresses[addressType][addressField];\n      } else {\n        return !eval(field); // Evaluate other fields directly\n      }\n    });\n    if (isAnyFieldMissing) {\n      setError('Please fill in all required fields.');\n      return;\n    }\n\n    // Validate passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('userType', userType);\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    // Append address data based on Same as Farm Location selection\n    if (sameAddress) {\n      // Use FarmerAddress\n      formData.append('addressStreet', addresses.farmerAddress.street);\n      formData.append('addressCity', addresses.farmerAddress.city);\n      formData.append('addressProvince', addresses.farmerAddress.province);\n      formData.append('addressZipCode', addresses.farmerAddress.zipCode);\n    } else {\n      // Use FarmLocationAddress\n      formData.append('addressStreet', addresses.farmLocationAddress.street);\n      formData.append('addressCity', addresses.farmLocationAddress.city);\n      formData.append('addressProvince', addresses.farmLocationAddress.province);\n      formData.append('addressZipCode', addresses.farmLocationAddress.zipCode);\n    }\n\n    // Append additional data based on userType\n    switch (userType) {\n      case 'Farmer':\n        formData.append('farmerName', farmerName);\n        formData.append('farmerId', farmerId);\n        formData.append('farmerLicense', farmerLicense);\n        formData.append('sameAddress', sameAddress.toString());\n        break;\n      case 'Worker':\n        formData.append('workerName', workerName);\n        formData.append('addressStreet', addresses.communicationAddress.street);\n        formData.append('addressCity', addresses.communicationAddress.city);\n        formData.append('addressProvince', addresses.communicationAddress.province);\n        formData.append('addressZipCode', addresses.communicationAddress.zipCode);\n        formData.append('skills', skills);\n        break;\n      case 'Customer':\n        formData.append('customerName', customerName);\n        formData.append('addressStreet', addresses.shippingAddress.street);\n        formData.append('addressCity', addresses.shippingAddress.city);\n        formData.append('addressProvince', addresses.shippingAddress.province);\n        formData.append('addressZipCode', addresses.shippingAddress.zipCode);\n        break;\n      default:\n        break;\n    }\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Registration successful\n        console.log('Registration successful:', data);\n        setError('Registration successful');\n        alert('Registration successful');\n        navigate('/login'); // Redirect to login page after successful registration\n      } else {\n        // Registration failed\n        console.error('Registration failed:', data);\n        setError('Registration failed. Please try again later.');\n      }\n    } catch (error) {\n      console.error('Error during registration:', error);\n      setError('Error during registration. Please try again later.');\n    }\n  };\n  const clearErrors = () => {\n    setError('');\n    setUsernameExistsError('');\n    setEmailExistsError('');\n    setPhoneExistsError('');\n  };\n  const clearErrorByName = name => {\n    switch (name) {\n      case 'username':\n        setUsernameExistsError('');\n        break;\n      case 'email':\n        setEmailExistsError('');\n        break;\n      case 'phone':\n        setPhoneExistsError('');\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userTypeSelection\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: farmerImage,\n        alt: \"Farmer\",\n        onClick: () => handleSelectUserType('Farmer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: customerImage,\n        alt: \"Customer\",\n        onClick: () => handleSelectUserType('Customer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: workerImage,\n        alt: \"Worker\",\n        onClick: () => handleSelectUserType('Worker')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [userType, \" Registration Form\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), usernameExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: usernameExistsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), emailExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: emailExistsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          value: phone,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), phoneExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: phoneExistsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), userType === 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Farmer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"farmerName\",\n          value: farmerName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }, this), userType === 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Farmer ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"farmerId\",\n          value: farmerId,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }, this), userType === 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Farmer License:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"farmerLicense\",\n          onChange: handleFileChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this), userType === 'Worker' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Worker Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"workerName\",\n          value: workerName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this), userType === 'Worker' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Skills:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"skills\",\n          value: skills,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }, this), userType === 'Customer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Customer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"customerName\",\n          value: customerName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this), !sameAddress && userType === 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Farm Location Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"farmLocationAddress.street\",\n          placeholder: \"Street\",\n          onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"farmLocationAddress.city\",\n          placeholder: \"City\",\n          onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"farmLocationAddress.province\",\n          placeholder: \"Province\",\n          onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"farmLocationAddress.zipCode\",\n          placeholder: \"Zip Code\",\n          onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }, this), !sameAddress && userType === 'Worker' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Communication Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"communicationAddress.street\",\n          placeholder: \"Street\",\n          onChange: e => handleAddressChange(e, 'communicationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"communicationAddress.city\",\n          placeholder: \"City\",\n          onChange: e => handleAddressChange(e, 'communicationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"communicationAddress.province\",\n          placeholder: \"Province\",\n          onChange: e => handleAddressChange(e, 'communicationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"communicationAddress.zipCode\",\n          placeholder: \"Zip Code\",\n          onChange: e => handleAddressChange(e, 'communicationAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }, this), !sameAddress && userType === 'Customer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Shipping Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"shippingAddress.street\",\n          placeholder: \"Street\",\n          onChange: e => handleAddressChange(e, 'shippingAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"shippingAddress.city\",\n          placeholder: \"City\",\n          onChange: e => handleAddressChange(e, 'shippingAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"shippingAddress.province\",\n          placeholder: \"Province\",\n          onChange: e => handleAddressChange(e, 'shippingAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"shippingAddress.zipCode\",\n          placeholder: \"Zip Code\",\n          onChange: e => handleAddressChange(e, 'shippingAddress'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }, this), userType !== 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"sameAddress\",\n          name: \"sameAddress\",\n          checked: sameAddress,\n          onChange: handleSameAddressChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sameAddress\",\n          children: \"Same as Farm Location Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"qVK/aT04XDD5OBQ/mDexDgIqPYY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Navigation","Footer","farmerImage","customerImage","workerImage","jsxDEV","_jsxDEV","Register","_s","navigate","userType","setUserType","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","farmerName","setFarmerName","farmerId","setFarmerId","farmerLicense","setFarmerLicense","email","setEmail","phone","setPhone","addresses","setAddresses","farmerAddress","street","city","province","zipCode","farmLocationAddress","shippingAddress","communicationAddress","workerName","setWorkerName","skills","setSkills","customerName","setCustomerName","error","setError","usernameExistsError","setUsernameExistsError","emailExistsError","setEmailExistsError","phoneExistsError","setPhoneExistsError","showForm","setShowForm","sameAddress","setSameAddress","handleSelectUserType","selectedUserType","clearErrors","handleChange","event","name","value","target","clearErrorByName","phoneNumber","replace","length","formattedPhoneNumber","slice","handleAddressChange","addressType","formattedZipCode","formatZipCode","prevAddresses","cleanedZipCode","zipRegex","test","toUpperCase","handleFileChange","files","handleSameAddressChange","prevSameAddress","handleSubmit","preventDefault","requiredFields","isAnyFieldMissing","some","field","includes","addressField","split","eval","formData","FormData","append","toString","response","fetch","method","body","data","json","ok","console","log","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","onSubmit","type","onChange","required","placeholder","e","id","checked","htmlFor","to","_c","$RefreshReg$"],"sources":["G:/Project/Capst/Crop-Delight/src/Components/Register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../Register/RegisterPage.css';\r\nimport Navigation from '../Navigation/NavigationPage';\r\nimport Footer from '../Footer/FooterPage';\r\nimport farmerImage from '../assets/farmer.png';\r\nimport customerImage from '../assets/customer.png';\r\nimport workerImage from '../assets/worker.png';\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [farmerName, setFarmerName] = useState('');\r\n  const [farmerId, setFarmerId] = useState('');\r\n  const [farmerLicense, setFarmerLicense] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [addresses, setAddresses] = useState({\r\n    farmerAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    farmLocationAddress: {\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    shippingAddress: { // Initialize shippingAddress\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n    communicationAddress: { // Initialize communicationAddress\r\n      street: '',\r\n      city: '',\r\n      province: '',\r\n      zipCode: '',\r\n    },\r\n  });\r\n  const [workerName, setWorkerName] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [usernameExistsError, setUsernameExistsError] = useState('');\r\n  const [emailExistsError, setEmailExistsError] = useState('');\r\n  const [phoneExistsError, setPhoneExistsError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [sameAddress, setSameAddress] = useState(true);\r\n\r\n  const handleSelectUserType = (selectedUserType) => {\r\n    setUserType(selectedUserType);\r\n    setShowForm(true);\r\n    setSameAddress(true); // Set default to true for Farmer\r\n    clearErrors(); // Clear errors when selecting new userType\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    clearErrorByName(name); // Clear error for the specific field\r\n\r\n    // Phone number format validation and adjustment\r\n    if (name === 'phone') {\r\n      // Remove non-numeric characters from input\r\n      const phoneNumber = value.replace(/\\D/g, '');\r\n\r\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\r\n      if (phoneNumber.length === 10) {\r\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\r\n        setPhone(formattedPhoneNumber);\r\n      } else {\r\n        setPhone(value); // If not 10 digits, set as entered\r\n      }\r\n    } else {\r\n      // For other fields, update state normally\r\n      switch (name) {\r\n        case 'username':\r\n          setUsername(value);\r\n          break;\r\n        case 'password':\r\n          setPassword(value);\r\n          break;\r\n        case 'confirmPassword':\r\n          setConfirmPassword(value);\r\n          break;\r\n        case 'farmerName':\r\n          setFarmerName(value);\r\n          break;\r\n        case 'farmerId':\r\n          setFarmerId(value);\r\n          break;\r\n        case 'email':\r\n          setEmail(value);\r\n          break;\r\n        case 'workerName':\r\n          setWorkerName(value);\r\n          break;\r\n        case 'skills':\r\n          setSkills(value);\r\n          break;\r\n        case 'customerName':\r\n          setCustomerName(value);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddressChange = (event, addressType) => {\r\n    const { name, value } = event.target;\r\n\r\n    // Validate and format the zip code as L9T 6A6\r\n    const formattedZipCode = formatZipCode(value);\r\n\r\n    setAddresses((prevAddresses) => ({\r\n      ...prevAddresses,\r\n      [addressType]: {\r\n        ...prevAddresses[addressType],\r\n        [name]: formattedZipCode,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const formatZipCode = (zipCode) => {\r\n    // Remove non-alphanumeric characters\r\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\r\n\r\n    // Format the zip code as L9T 6A6 if it matches the pattern\r\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\r\n    if (zipRegex.test(cleanedZipCode)) {\r\n      // Insert space between the third and fourth characters\r\n      const formattedZipCode = `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`;\r\n      return formattedZipCode.toUpperCase(); // Ensure uppercase format\r\n    } else {\r\n      return zipCode; // Return as entered if not in the correct format\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setFarmerLicense(event.target.files[0]);\r\n  };\r\n\r\n  const handleSameAddressChange = () => {\r\n    setSameAddress((prevSameAddress) => !prevSameAddress);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check required fields based on userType\r\n    let requiredFields = ['username', 'password', 'confirmPassword', 'email', 'phone'];\r\n    switch (userType) {\r\n      case 'Farmer':\r\n        requiredFields = [...requiredFields, 'farmerName', 'farmerId', 'farmerLicense'];\r\n        if (!sameAddress) {\r\n          requiredFields = [...requiredFields, 'farmLocationAddress'];\r\n        }\r\n        break;\r\n      case 'Worker':\r\n        requiredFields = [...requiredFields, 'workerName', 'skills', 'communicationAddress'];\r\n        break;\r\n      case 'Customer':\r\n        requiredFields = [...requiredFields, 'customerName', 'shippingAddress'];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Check if all required fields are filled\r\n    const isAnyFieldMissing = requiredFields.some((field) => {\r\n      if (field === 'farmLocationAddress' && sameAddress) {\r\n        return false; // If sameAddress is true, farmLocationAddress is not required\r\n      }\r\n      // Check if the field is an address type\r\n      if (field.includes('.')) {\r\n        const [addressType, addressField] = field.split('.');\r\n        return !addresses[addressType][addressField];\r\n      } else {\r\n        return !eval(field); // Evaluate other fields directly\r\n      }\r\n    });\r\n\r\n    if (isAnyFieldMissing) {\r\n      setError('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    // Validate passwords match\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('userType', userType);\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n    formData.append('email', email);\r\n    formData.append('phone', phone);\r\n\r\n    // Append address data based on Same as Farm Location selection\r\n    if (sameAddress) {\r\n      // Use FarmerAddress\r\n      formData.append('addressStreet', addresses.farmerAddress.street);\r\n      formData.append('addressCity', addresses.farmerAddress.city);\r\n      formData.append('addressProvince', addresses.farmerAddress.province);\r\n      formData.append('addressZipCode', addresses.farmerAddress.zipCode);\r\n    } else {\r\n      // Use FarmLocationAddress\r\n      formData.append('addressStreet', addresses.farmLocationAddress.street);\r\n      formData.append('addressCity', addresses.farmLocationAddress.city);\r\n      formData.append('addressProvince', addresses.farmLocationAddress.province);\r\n      formData.append('addressZipCode', addresses.farmLocationAddress.zipCode);\r\n    }\r\n\r\n    // Append additional data based on userType\r\n    switch (userType) {\r\n      case 'Farmer':\r\n        formData.append('farmerName', farmerName);\r\n        formData.append('farmerId', farmerId);\r\n        formData.append('farmerLicense', farmerLicense);\r\n        formData.append('sameAddress', sameAddress.toString());\r\n        break;\r\n\r\n      case 'Worker':\r\n        formData.append('workerName', workerName);\r\n        formData.append('addressStreet', addresses.communicationAddress.street);\r\n        formData.append('addressCity', addresses.communicationAddress.city);\r\n        formData.append('addressProvince', addresses.communicationAddress.province);\r\n        formData.append('addressZipCode', addresses.communicationAddress.zipCode);\r\n        formData.append('skills', skills);\r\n        break;\r\n\r\n      case 'Customer':\r\n        formData.append('customerName', customerName);\r\n        formData.append('addressStreet', addresses.shippingAddress.street);\r\n        formData.append('addressCity', addresses.shippingAddress.city);\r\n        formData.append('addressProvince', addresses.shippingAddress.province);\r\n        formData.append('addressZipCode', addresses.shippingAddress.zipCode);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/register', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Registration successful\r\n        console.log('Registration successful:', data);\r\n        setError('Registration successful');\r\n        alert('Registration successful');\r\n        navigate('/login'); // Redirect to login page after successful registration\r\n      } else {\r\n        // Registration failed\r\n        console.error('Registration failed:', data);\r\n        setError('Registration failed. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n      setError('Error during registration. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setError('');\r\n    setUsernameExistsError('');\r\n    setEmailExistsError('');\r\n    setPhoneExistsError('');\r\n  };\r\n\r\n  const clearErrorByName = (name) => {\r\n    switch (name) {\r\n      case 'username':\r\n        setUsernameExistsError('');\r\n        break;\r\n      case 'email':\r\n        setEmailExistsError('');\r\n        break;\r\n      case 'phone':\r\n        setPhoneExistsError('');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <h1>Register</h1>\r\n      <div className=\"userTypeSelection\">\r\n        <img src={farmerImage} alt=\"Farmer\" onClick={() => handleSelectUserType('Farmer')} />\r\n        <img src={customerImage} alt=\"Customer\" onClick={() => handleSelectUserType('Customer')} />\r\n        <img src={workerImage} alt=\"Worker\" onClick={() => handleSelectUserType('Worker')} />\r\n      </div>\r\n\r\n      {showForm && (\r\n        <form className=\"registerForm\" onSubmit={handleSubmit}>\r\n          <h2>{userType} Registration Form</h2>\r\n          {error && <p className=\"error\">{error}</p>}\r\n\r\n          <div>\r\n            <label>Username:</label>\r\n            <input type=\"text\" name=\"username\" value={username} onChange={handleChange} required />\r\n            {usernameExistsError && <p className=\"error\">{usernameExistsError}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label>Password:</label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={handleChange} required />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Confirm Password:</label>\r\n            <input type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} required />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Email:</label>\r\n            <input type=\"email\" name=\"email\" value={email} onChange={handleChange} required />\r\n            {emailExistsError && <p className=\"error\">{emailExistsError}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label>Phone:</label>\r\n            <input type=\"tel\" name=\"phone\" value={phone} onChange={handleChange} required />\r\n            {phoneExistsError && <p className=\"error\">{phoneExistsError}</p>}\r\n          </div>\r\n\r\n          {userType === 'Farmer' && (\r\n            <div>\r\n              <label>Farmer Name:</label>\r\n              <input type=\"text\" name=\"farmerName\" value={farmerName} onChange={handleChange} required />\r\n            </div>\r\n          )}\r\n\r\n          {userType === 'Farmer' && (\r\n            <div>\r\n              <label>Farmer ID:</label>\r\n              <input type=\"text\" name=\"farmerId\" value={farmerId} onChange={handleChange} required />\r\n            </div>\r\n          )}\r\n\r\n          {userType === 'Farmer' && (\r\n            <div>\r\n              <label>Farmer License:</label>\r\n              <input type=\"file\" name=\"farmerLicense\" onChange={handleFileChange} required />\r\n            </div>\r\n          )}\r\n\r\n          {userType === 'Worker' && (\r\n            <div>\r\n              <label>Worker Name:</label>\r\n              <input type=\"text\" name=\"workerName\" value={workerName} onChange={handleChange} required />\r\n            </div>\r\n          )}\r\n\r\n          {userType === 'Worker' && (\r\n            <div>\r\n              <label>Skills:</label>\r\n              <input type=\"text\" name=\"skills\" value={skills} onChange={handleChange} required />\r\n            </div>\r\n          )}\r\n\r\n          {userType === 'Customer' && (\r\n            <div>\r\n              <label>Customer Name:</label>\r\n              <input type=\"text\" name=\"customerName\" value={customerName} onChange={handleChange} required />\r\n            </div>\r\n          )}\r\n\r\n          {!sameAddress && userType === 'Farmer' && (\r\n            <div>\r\n              <label>Farm Location Address:</label>\r\n              <input type=\"text\" name=\"farmLocationAddress.street\" placeholder=\"Street\" onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\r\n              <input type=\"text\" name=\"farmLocationAddress.city\" placeholder=\"City\" onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\r\n              <input type=\"text\" name=\"farmLocationAddress.province\" placeholder=\"Province\" onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\r\n              <input type=\"text\" name=\"farmLocationAddress.zipCode\" placeholder=\"Zip Code\" onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\r\n            </div>\r\n          )}\r\n\r\n          {!sameAddress && userType === 'Worker' && (\r\n            <div>\r\n              <label>Communication Address:</label>\r\n              <input type=\"text\" name=\"communicationAddress.street\" placeholder=\"Street\" onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\r\n              <input type=\"text\" name=\"communicationAddress.city\" placeholder=\"City\" onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\r\n              <input type=\"text\" name=\"communicationAddress.province\" placeholder=\"Province\" onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\r\n              <input type=\"text\" name=\"communicationAddress.zipCode\" placeholder=\"Zip Code\" onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\r\n            </div>\r\n          )}\r\n\r\n          {!sameAddress && userType === 'Customer' && (\r\n            <div>\r\n              <label>Shipping Address:</label>\r\n              <input type=\"text\" name=\"shippingAddress.street\" placeholder=\"Street\" onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\r\n              <input type=\"text\" name=\"shippingAddress.city\" placeholder=\"City\" onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\r\n              <input type=\"text\" name=\"shippingAddress.province\" placeholder=\"Province\" onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\r\n              <input type=\"text\" name=\"shippingAddress.zipCode\" placeholder=\"Zip Code\" onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\r\n            </div>\r\n          )}\r\n\r\n          {userType !== 'Farmer' && (\r\n            <div>\r\n              <input type=\"checkbox\" id=\"sameAddress\" name=\"sameAddress\" checked={sameAddress} onChange={handleSameAddressChange} />\r\n              <label htmlFor=\"sameAddress\">Same as Farm Location Address</label>\r\n            </div>\r\n          )}\r\n\r\n          <button type=\"submit\">Register</button>\r\n\r\n          <p>\r\n            Already have an account? <Link to=\"/login\">Login here</Link>\r\n          </p>\r\n        </form>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}