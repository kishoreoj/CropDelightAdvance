{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\Capst\\\\Crop-Delight\\\\src\\\\Components\\\\Register\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Register/RegisterPage.css';\nimport Navigation from '../Navigation/NavigationPage';\nimport Footer from '../Footer/FooterPage';\nimport farmerImage from '../assets/farmer.png';\nimport customerImage from '../assets/customer.png';\nimport workerImage from '../assets/worker.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [farmerName, setFarmerName] = useState('');\n  const [farmerId, setFarmerId] = useState('');\n  const [farmerLicense, setFarmerLicense] = useState(null);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addresses, setAddresses] = useState({\n    farmerAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    farmLocationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    shippingAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    communicationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    }\n  });\n  const [workerName, setWorkerName] = useState('');\n  const [skills, setSkills] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [error, setError] = useState('');\n  const [usernameExistsError, setUsernameExistsError] = useState('');\n  const [emailExistsError, setEmailExistsError] = useState('');\n  const [phoneExistsError, setPhoneExistsError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [sameAddress, setSameAddress] = useState(true);\n  const handleSelectUserType = selectedUserType => {\n    setUserType(selectedUserType);\n    setShowForm(true);\n    setSameAddress(true); // Set default to true for Farmer\n    clearErrors(); // Clear errors when selecting new userType\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    clearErrorByName(name); // Clear error for the specific field\n\n    // Phone number format validation and adjustment\n    if (name === 'phone') {\n      // Remove non-numeric characters from input\n      const phoneNumber = value.replace(/\\D/g, '');\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\n      if (phoneNumber.length === 10) {\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n        setPhone(formattedPhoneNumber);\n      } else {\n        setPhone(value); // If not 10 digits, set as entered\n      }\n    } else {\n      // For other fields, update state normally\n      switch (name) {\n        case 'username':\n          setUsername(value);\n          break;\n        case 'password':\n          setPassword(value);\n          break;\n        case 'confirmPassword':\n          setConfirmPassword(value);\n          break;\n        case 'farmerName':\n          setFarmerName(value);\n          break;\n        case 'farmerId':\n          setFarmerId(value);\n          break;\n        case 'email':\n          setEmail(value);\n          break;\n        case 'workerName':\n          setWorkerName(value);\n          break;\n        case 'skills':\n          setSkills(value);\n          break;\n        case 'customerName':\n          setCustomerName(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleAddressChange = (event, addressType) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const formattedZipCode = formatZipCode(value);\n    setAddresses(prevAddresses => ({\n      ...prevAddresses,\n      [addressType]: {\n        ...prevAddresses[addressType],\n        [name]: formattedZipCode\n      }\n    }));\n  };\n  const formatZipCode = zipCode => {\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\n    if (zipRegex.test(cleanedZipCode)) {\n      return `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`.toUpperCase();\n    } else {\n      return zipCode; // Return as entered if not in the correct format\n    }\n  };\n  const handleFileChange = event => {\n    setFarmerLicense(event.target.files[0]);\n  };\n  const handleSameAddressChange = () => {\n    setSameAddress(prevSameAddress => !prevSameAddress);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!username || !password || !confirmPassword || !email || !phone) {\n      setError('Please fill in all required fields.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('userType', userType);\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    Object.keys(addresses).forEach(addressType => {\n      formData.append(`${addressType}Street`, addresses[addressType].street);\n      formData.append(`${addressType}City`, addresses[addressType].city);\n      formData.append(`${addressType}Province`, addresses[addressType].province);\n      formData.append(`${addressType}ZipCode`, addresses[addressType].zipCode);\n    });\n    if (userType === 'Farmer') {\n      formData.append('farmerName', farmerName);\n      formData.append('farmerId', farmerId);\n      formData.append('farmerLicense', farmerLicense);\n      formData.append('sameAddress', sameAddress.toString());\n    } else if (userType === 'Worker') {\n      formData.append('workerName', workerName);\n      formData.append('skills', skills);\n    } else if (userType === 'Customer') {\n      formData.append('customerName', customerName);\n    }\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Registration successful\n        setError('Registration successful');\n        alert('Registration successful');\n        navigate('/login'); // Redirect to login page\n      } else {\n        if (data.message.includes('Username already exists')) {\n          setUsernameExistsError('Username already exists. Please choose a different one.');\n        } else if (data.message.includes('Email already exists')) {\n          setEmailExistsError('Email already exists. Please use a different email.');\n        } else if (data.message.includes('Phone Number already exists')) {\n          setPhoneExistsError('Phone Number already exists. Please use a different phone number.');\n        } else {\n          setError(data.message);\n        }\n      }\n    } catch (error) {\n      setError('Failed to register. Please try again later.');\n    }\n  };\n  const goBackToUserTypeSelection = () => {\n    setShowForm(false);\n    setUserType('');\n    clearErrors(); // Clear errors when going back\n  };\n  const clearErrorByName = name => {\n    switch (name) {\n      case 'username':\n        setUsernameExistsError('');\n        break;\n      case 'email':\n        setEmailExistsError('');\n        break;\n      case 'phone':\n        setPhoneExistsError('');\n        break;\n      default:\n        break;\n    }\n  };\n  const clearErrors = () => {\n    setError('');\n    setUsernameExistsError('');\n    setEmailExistsError('');\n    setPhoneExistsError('');\n  };\n  const renderProvinceOptions = () => {\n    const provinces = ['Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland and Labrador', 'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island', 'Quebec', 'Saskatchewan', 'Yukon'];\n    return provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: province,\n      children: province\n    }, province, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: [!showForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"userSelectionHeader\",\n          children: \"Register as\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-type-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            onClick: () => handleSelectUserType('Farmer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: farmerImage,\n              alt: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n            onClick: () => handleSelectUserType('Customer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: customerImage,\n              alt: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"figure\", {\n            onClick: () => handleSelectUserType('Worker'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: workerImage,\n              alt: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n              children: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"userSelectionHeader\",\n          children: [\"Register as a \", userType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"registerForm\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), usernameExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: usernameExistsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), userType === 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"farmerName\",\n              children: \"Farmer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"farmerName\",\n              name: \"farmerName\",\n              value: farmerName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"farmerId\",\n              children: \"Farmer ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"farmerId\",\n              name: \"farmerId\",\n              value: farmerId,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"farmerLicense\",\n              children: \"Farmer License\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"farmerLicense\",\n              name: \"farmerLicense\",\n              onChange: handleFileChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"farmerAddressStreet\",\n              children: \"Farmer Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"farmerAddressStreet\",\n              name: \"street\",\n              value: addresses.farmerAddress.street,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              placeholder: \"Street\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"farmerAddressCity\",\n              name: \"city\",\n              value: addresses.farmerAddress.city,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              placeholder: \"City\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"farmerAddressProvince\",\n              name: \"province\",\n              value: addresses.farmerAddress.province,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Province\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), renderProvinceOptions()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"farmerAddressZipCode\",\n              name: \"zipCode\",\n              value: addresses.farmerAddress.zipCode,\n              onChange: e => handleAddressChange(e, 'farmerAddress'),\n              placeholder: \"Zip Code\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sameAddress\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"sameAddress\",\n                name: \"sameAddress\",\n                checked: sameAddress,\n                onChange: handleSameAddressChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), \"Same as Farmer Address\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), !sameAddress && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"farmLocationAddressStreet\",\n                children: \"Farm Location Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"farmLocationAddressStreet\",\n                name: \"street\",\n                value: addresses.farmLocationAddress.street,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                placeholder: \"Street\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"farmLocationAddressCity\",\n                name: \"city\",\n                value: addresses.farmLocationAddress.city,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                placeholder: \"City\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"farmLocationAddressProvince\",\n                name: \"province\",\n                value: addresses.farmLocationAddress.province,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Province\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 25\n                }, this), renderProvinceOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"farmLocationAddressZipCode\",\n                name: \"zipCode\",\n                value: addresses.farmLocationAddress.zipCode,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                placeholder: \"Zip Code\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), userType === 'Worker' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"workerName\",\n              children: \"Worker Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"workerName\",\n              name: \"workerName\",\n              value: workerName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"skills\",\n              children: \"Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"skills\",\n              name: \"skills\",\n              value: skills,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), userType === 'Customer' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customerName\",\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"customerName\",\n              name: \"customerName\",\n              value: customerName,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), emailExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: emailExistsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            name: \"phone\",\n            value: phone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), phoneExistsError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: phoneExistsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"communicationAddressStreet\",\n            children: \"Communication Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"communicationAddressStreet\",\n            name: \"street\",\n            value: addresses.communicationAddress.street,\n            onChange: e => handleAddressChange(e, 'communicationAddress'),\n            placeholder: \"Street\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"communicationAddressCity\",\n            name: \"city\",\n            value: addresses.communicationAddress.city,\n            onChange: e => handleAddressChange(e, 'communicationAddress'),\n            placeholder: \"City\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"communicationAddressProvince\",\n            name: \"province\",\n            value: addresses.communicationAddress.province,\n            onChange: e => handleAddressChange(e, 'communicationAddress'),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), renderProvinceOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"communicationAddressZipCode\",\n            name: \"zipCode\",\n            value: addresses.communicationAddress.zipCode,\n            onChange: e => handleAddressChange(e, 'communicationAddress'),\n            placeholder: \"Zip Code\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"shippingAddressStreet\",\n            children: \"Shipping Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"shippingAddressStreet\",\n            name: \"street\",\n            value: addresses.shippingAddress.street,\n            onChange: e => handleAddressChange(e, 'shippingAddress'),\n            placeholder: \"Street\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"shippingAddressCity\",\n            name: \"city\",\n            value: addresses.shippingAddress.city,\n            onChange: e => handleAddressChange(e, 'shippingAddress'),\n            placeholder: \"City\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"shippingAddressProvince\",\n            name: \"province\",\n            value: addresses.shippingAddress.province,\n            onChange: e => handleAddressChange(e, 'shippingAddress'),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), renderProvinceOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"shippingAddressZipCode\",\n            name: \"zipCode\",\n            value: addresses.shippingAddress.zipCode,\n            onChange: e => handleAddressChange(e, 'shippingAddress'),\n            placeholder: \"Zip Code\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: goBackToUserTypeSelection,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"existingUser\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"gLG2NyVC/dYYq5NwId5TiWeIrOQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Navigation","Footer","farmerImage","customerImage","workerImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","userType","setUserType","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","farmerName","setFarmerName","farmerId","setFarmerId","farmerLicense","setFarmerLicense","email","setEmail","phone","setPhone","addresses","setAddresses","farmerAddress","street","city","province","zipCode","farmLocationAddress","shippingAddress","communicationAddress","workerName","setWorkerName","skills","setSkills","customerName","setCustomerName","error","setError","usernameExistsError","setUsernameExistsError","emailExistsError","setEmailExistsError","phoneExistsError","setPhoneExistsError","showForm","setShowForm","sameAddress","setSameAddress","handleSelectUserType","selectedUserType","clearErrors","handleChange","event","name","value","target","clearErrorByName","phoneNumber","replace","length","formattedPhoneNumber","slice","handleAddressChange","addressType","formattedZipCode","formatZipCode","prevAddresses","cleanedZipCode","zipRegex","test","toUpperCase","handleFileChange","files","handleSameAddressChange","prevSameAddress","handleSubmit","preventDefault","formData","FormData","append","Object","keys","forEach","toString","response","fetch","method","body","data","json","ok","alert","message","includes","goBackToUserTypeSelection","renderProvinceOptions","provinces","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","onSubmit","htmlFor","type","id","onChange","required","e","placeholder","checked","to","_c","$RefreshReg$"],"sources":["G:/Project/Capst/Crop-Delight/src/Components/Register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../Register/RegisterPage.css';\r\nimport Navigation from '../Navigation/NavigationPage';\r\nimport Footer from '../Footer/FooterPage';\r\nimport farmerImage from '../assets/farmer.png';\r\nimport customerImage from '../assets/customer.png';\r\nimport workerImage from '../assets/worker.png';\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [farmerName, setFarmerName] = useState('');\r\n  const [farmerId, setFarmerId] = useState('');\r\n  const [farmerLicense, setFarmerLicense] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [addresses, setAddresses] = useState({\r\n    farmerAddress: { street: '', city: '', province: '', zipCode: '' },\r\n    farmLocationAddress: { street: '', city: '', province: '', zipCode: '' },\r\n    shippingAddress: { street: '', city: '', province: '', zipCode: '' },\r\n    communicationAddress: { street: '', city: '', province: '', zipCode: '' },\r\n  });\r\n  const [workerName, setWorkerName] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [usernameExistsError, setUsernameExistsError] = useState('');\r\n  const [emailExistsError, setEmailExistsError] = useState('');\r\n  const [phoneExistsError, setPhoneExistsError] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [sameAddress, setSameAddress] = useState(true);\r\n\r\n  const handleSelectUserType = (selectedUserType) => {\r\n    setUserType(selectedUserType);\r\n    setShowForm(true);\r\n    setSameAddress(true); // Set default to true for Farmer\r\n    clearErrors(); // Clear errors when selecting new userType\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    clearErrorByName(name); // Clear error for the specific field\r\n\r\n    // Phone number format validation and adjustment\r\n    if (name === 'phone') {\r\n      // Remove non-numeric characters from input\r\n      const phoneNumber = value.replace(/\\D/g, '');\r\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\r\n      if (phoneNumber.length === 10) {\r\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\r\n        setPhone(formattedPhoneNumber);\r\n      } else {\r\n        setPhone(value); // If not 10 digits, set as entered\r\n      }\r\n    } else {\r\n      // For other fields, update state normally\r\n      switch (name) {\r\n        case 'username':\r\n          setUsername(value);\r\n          break;\r\n        case 'password':\r\n          setPassword(value);\r\n          break;\r\n        case 'confirmPassword':\r\n          setConfirmPassword(value);\r\n          break;\r\n        case 'farmerName':\r\n          setFarmerName(value);\r\n          break;\r\n        case 'farmerId':\r\n          setFarmerId(value);\r\n          break;\r\n        case 'email':\r\n          setEmail(value);\r\n          break;\r\n        case 'workerName':\r\n          setWorkerName(value);\r\n          break;\r\n        case 'skills':\r\n          setSkills(value);\r\n          break;\r\n        case 'customerName':\r\n          setCustomerName(value);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddressChange = (event, addressType) => {\r\n    const { name, value } = event.target;\r\n    const formattedZipCode = formatZipCode(value);\r\n    setAddresses((prevAddresses) => ({\r\n      ...prevAddresses,\r\n      [addressType]: {\r\n        ...prevAddresses[addressType],\r\n        [name]: formattedZipCode,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const formatZipCode = (zipCode) => {\r\n    const cleanedZipCode = zipCode.replace(/[^a-zA-Z0-9]/g, '');\r\n    const zipRegex = /^[a-zA-Z]\\d[a-zA-Z]\\s?\\d[a-zA-Z]\\d$/;\r\n    if (zipRegex.test(cleanedZipCode)) {\r\n      return `${cleanedZipCode.slice(0, 3)} ${cleanedZipCode.slice(3)}`.toUpperCase();\r\n    } else {\r\n      return zipCode; // Return as entered if not in the correct format\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setFarmerLicense(event.target.files[0]);\r\n  };\r\n\r\n  const handleSameAddressChange = () => {\r\n    setSameAddress((prevSameAddress) => !prevSameAddress);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!username || !password || !confirmPassword || !email || !phone) {\r\n      setError('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('userType', userType);\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n    formData.append('email', email);\r\n    formData.append('phone', phone);\r\n\r\n    Object.keys(addresses).forEach((addressType) => {\r\n      formData.append(`${addressType}Street`, addresses[addressType].street);\r\n      formData.append(`${addressType}City`, addresses[addressType].city);\r\n      formData.append(`${addressType}Province`, addresses[addressType].province);\r\n      formData.append(`${addressType}ZipCode`, addresses[addressType].zipCode);\r\n    });\r\n\r\n    if (userType === 'Farmer') {\r\n      formData.append('farmerName', farmerName);\r\n      formData.append('farmerId', farmerId);\r\n      formData.append('farmerLicense', farmerLicense);\r\n      formData.append('sameAddress', sameAddress.toString());\r\n    } else if (userType === 'Worker') {\r\n      formData.append('workerName', workerName);\r\n      formData.append('skills', skills);\r\n    } else if (userType === 'Customer') {\r\n      formData.append('customerName', customerName);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/register', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Registration successful\r\n        setError('Registration successful');\r\n        alert('Registration successful');\r\n        navigate('/login'); // Redirect to login page\r\n      } else {\r\n        if (data.message.includes('Username already exists')) {\r\n          setUsernameExistsError('Username already exists. Please choose a different one.');\r\n        } else if (data.message.includes('Email already exists')) {\r\n          setEmailExistsError('Email already exists. Please use a different email.');\r\n        } else if (data.message.includes('Phone Number already exists')) {\r\n          setPhoneExistsError('Phone Number already exists. Please use a different phone number.');\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to register. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const goBackToUserTypeSelection = () => {\r\n    setShowForm(false);\r\n    setUserType('');\r\n    clearErrors(); // Clear errors when going back\r\n  };\r\n\r\n  const clearErrorByName = (name) => {\r\n    switch (name) {\r\n      case 'username':\r\n        setUsernameExistsError('');\r\n        break;\r\n      case 'email':\r\n        setEmailExistsError('');\r\n        break;\r\n      case 'phone':\r\n        setPhoneExistsError('');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setError('');\r\n    setUsernameExistsError('');\r\n    setEmailExistsError('');\r\n    setPhoneExistsError('');\r\n  };\r\n\r\n  const renderProvinceOptions = () => {\r\n    const provinces = [\r\n      'Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland and Labrador',\r\n      'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island',\r\n      'Quebec', 'Saskatchewan', 'Yukon'\r\n    ];\r\n\r\n    return provinces.map(province => (\r\n      <option key={province} value={province}>{province}</option>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <div className=\"register-page\">\r\n        {!showForm ? (\r\n          <div>\r\n            <h2 className=\"userSelectionHeader\">Register as</h2>\r\n            <div className=\"user-type-selection\">\r\n              <figure onClick={() => handleSelectUserType('Farmer')}>\r\n                <img src={farmerImage} alt=\"Farmer\" />\r\n                <figcaption>Farmer</figcaption>\r\n              </figure>\r\n              <figure onClick={() => handleSelectUserType('Customer')}>\r\n                <img src={customerImage} alt=\"Customer\" />\r\n                <figcaption>Customer</figcaption>\r\n              </figure>\r\n              <figure onClick={() => handleSelectUserType('Worker')}>\r\n                <img src={workerImage} alt=\"Worker\" />\r\n                <figcaption>Worker</figcaption>\r\n              </figure>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2 className=\"userSelectionHeader\">Register as a {userType}</h2>\r\n            <form className=\"registerForm\" onSubmit={handleSubmit}>\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input type=\"text\" id=\"username\" name=\"username\" value={username} onChange={handleChange} required />\r\n              {usernameExistsError && <p className=\"error\">{usernameExistsError}</p>}\r\n\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={handleChange} required />\r\n\r\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n              <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} required />\r\n\r\n              {userType === 'Farmer' && (\r\n                <div>\r\n                  <label htmlFor=\"farmerName\">Farmer Name</label>\r\n                  <input type=\"text\" id=\"farmerName\" name=\"farmerName\" value={farmerName} onChange={handleChange} required />\r\n\r\n                  <label htmlFor=\"farmerId\">Farmer ID</label>\r\n                  <input type=\"text\" id=\"farmerId\" name=\"farmerId\" value={farmerId} onChange={handleChange} required />\r\n\r\n                  <label htmlFor=\"farmerLicense\">Farmer License</label>\r\n                  <input type=\"file\" id=\"farmerLicense\" name=\"farmerLicense\" onChange={handleFileChange} required />\r\n\r\n                  <label htmlFor=\"farmerAddressStreet\">Farmer Address</label>\r\n                  <input type=\"text\" id=\"farmerAddressStreet\" name=\"street\" value={addresses.farmerAddress.street} onChange={(e) => handleAddressChange(e, 'farmerAddress')} placeholder=\"Street\" required />\r\n                  <input type=\"text\" id=\"farmerAddressCity\" name=\"city\" value={addresses.farmerAddress.city} onChange={(e) => handleAddressChange(e, 'farmerAddress')} placeholder=\"City\" required />\r\n                  <select id=\"farmerAddressProvince\" name=\"province\" value={addresses.farmerAddress.province} onChange={(e) => handleAddressChange(e, 'farmerAddress')} required>\r\n                    <option value=\"\">Select Province</option>\r\n                    {renderProvinceOptions()}\r\n                  </select>\r\n                  <input type=\"text\" id=\"farmerAddressZipCode\" name=\"zipCode\" value={addresses.farmerAddress.zipCode} onChange={(e) => handleAddressChange(e, 'farmerAddress')} placeholder=\"Zip Code\" required />\r\n\r\n                  <label htmlFor=\"sameAddress\">\r\n                    <input type=\"checkbox\" id=\"sameAddress\" name=\"sameAddress\" checked={sameAddress} onChange={handleSameAddressChange} />\r\n                    Same as Farmer Address\r\n                  </label>\r\n\r\n                  {!sameAddress && (\r\n                    <>\r\n                      <label htmlFor=\"farmLocationAddressStreet\">Farm Location Address</label>\r\n                      <input type=\"text\" id=\"farmLocationAddressStreet\" name=\"street\" value={addresses.farmLocationAddress.street} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} placeholder=\"Street\" required />\r\n                      <input type=\"text\" id=\"farmLocationAddressCity\" name=\"city\" value={addresses.farmLocationAddress.city} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} placeholder=\"City\" required />\r\n                      <select id=\"farmLocationAddressProvince\" name=\"province\" value={addresses.farmLocationAddress.province} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required>\r\n                        <option value=\"\">Select Province</option>\r\n                        {renderProvinceOptions()}\r\n                      </select>\r\n                      <input type=\"text\" id=\"farmLocationAddressZipCode\" name=\"zipCode\" value={addresses.farmLocationAddress.zipCode} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} placeholder=\"Zip Code\" required />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {userType === 'Worker' && (\r\n                <div>\r\n                  <label htmlFor=\"workerName\">Worker Name</label>\r\n                  <input type=\"text\" id=\"workerName\" name=\"workerName\" value={workerName} onChange={handleChange} required />\r\n\r\n                  <label htmlFor=\"skills\">Skills</label>\r\n                  <input type=\"text\" id=\"skills\" name=\"skills\" value={skills} onChange={handleChange} required />\r\n                </div>\r\n              )}\r\n\r\n              {userType === 'Customer' && (\r\n                <div>\r\n                  <label htmlFor=\"customerName\">Customer Name</label>\r\n                  <input type=\"text\" id=\"customerName\" name=\"customerName\" value={customerName} onChange={handleChange} required />\r\n                </div>\r\n              )}\r\n\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={handleChange} required />\r\n              {emailExistsError && <p className=\"error\">{emailExistsError}</p>}\r\n\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input type=\"tel\" id=\"phone\" name=\"phone\" value={phone} onChange={handleChange} required />\r\n              {phoneExistsError && <p className=\"error\">{phoneExistsError}</p>}\r\n\r\n              <label htmlFor=\"communicationAddressStreet\">Communication Address</label>\r\n              <input type=\"text\" id=\"communicationAddressStreet\" name=\"street\" value={addresses.communicationAddress.street} onChange={(e) => handleAddressChange(e, 'communicationAddress')} placeholder=\"Street\" required />\r\n              <input type=\"text\" id=\"communicationAddressCity\" name=\"city\" value={addresses.communicationAddress.city} onChange={(e) => handleAddressChange(e, 'communicationAddress')} placeholder=\"City\" required />\r\n              <select id=\"communicationAddressProvince\" name=\"province\" value={addresses.communicationAddress.province} onChange={(e) => handleAddressChange(e, 'communicationAddress')} required>\r\n                <option value=\"\">Select Province</option>\r\n                {renderProvinceOptions()}\r\n              </select>\r\n              <input type=\"text\" id=\"communicationAddressZipCode\" name=\"zipCode\" value={addresses.communicationAddress.zipCode} onChange={(e) => handleAddressChange(e, 'communicationAddress')} placeholder=\"Zip Code\" required />\r\n\r\n              <label htmlFor=\"shippingAddressStreet\">Shipping Address</label>\r\n              <input type=\"text\" id=\"shippingAddressStreet\" name=\"street\" value={addresses.shippingAddress.street} onChange={(e) => handleAddressChange(e, 'shippingAddress')} placeholder=\"Street\" required />\r\n              <input type=\"text\" id=\"shippingAddressCity\" name=\"city\" value={addresses.shippingAddress.city} onChange={(e) => handleAddressChange(e, 'shippingAddress')} placeholder=\"City\" required />\r\n              <select id=\"shippingAddressProvince\" name=\"province\" value={addresses.shippingAddress.province} onChange={(e) => handleAddressChange(e, 'shippingAddress')} required>\r\n                <option value=\"\">Select Province</option>\r\n                {renderProvinceOptions()}\r\n              </select>\r\n              <input type=\"text\" id=\"shippingAddressZipCode\" name=\"zipCode\" value={addresses.shippingAddress.zipCode} onChange={(e) => handleAddressChange(e, 'shippingAddress')} placeholder=\"Zip Code\" required />\r\n\r\n              {error && <p className=\"error\">{error}</p>}\r\n              <button type=\"submit\">Register</button>\r\n              <button type=\"button\" onClick={goBackToUserTypeSelection}>Back</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n        <p className=\"existingUser\">Already have an account? <Link to=\"/login\">Login</Link></p>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}